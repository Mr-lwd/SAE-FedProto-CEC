==================================================
goal = test
device = cuda
device_id = 0
dataset = MNIST_dir_0.3_imbalance_40
num_classes = 10
model_family = HCNNs8
batch_size = 256
local_learning_rate = 0.06
use_decay_scheduler = False
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 200
edge_epochs = 1
local_epochs = 5
algorithm = FedTGP
join_ratio = 1.0
random_join_ratio = False
num_clients = 40
num_edges = 10
prev = 0
times = 1
eval_gap = 1
save_folder_name = temp
auto_break = False
feature_dim = 512
vocab_size = 98635
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
optimizer = SGD
lamda = 1.0
weight_decay = 0
trans_delay_simulate = False
momentum = 0.8
agg_type = 0
buffersize = 10
gl_use_clients = 1
test_useglclassifier = 1
gamma = 1
drawtsne = 1
drawround = 20
noise_dim = 512
generator_learning_rate = 0.0001
hidden_dim = 512
server_epochs = 100
alpha = 1.0
beta = 1.0
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
server_learning_rate = 0.01
margin_threthold = 100.0
generator_path = stylegan/stylegan-xl-models/imagenet64.pkl
stable_diffusion_prompt = a cat
server_batch_size = 100
gen_batch_size = 4
mu = 50.0
==================================================
Random seed set as 42

============= Running time: 0th =============
Creating server and clients ...
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 0
label_counts: defaultdict(<class 'int'>, {7: 555, 6: 217, 8: 476, 1: 39, 4: 125, 0: 3, 5: 11, 2: 31})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 1
label_counts: defaultdict(<class 'int'>, {1: 333, 8: 357, 7: 261, 0: 228, 3: 105, 4: 47, 2: 9, 5: 6, 6: 4})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 2
label_counts: defaultdict(<class 'int'>, {9: 589, 4: 458, 2: 150, 0: 77, 6: 53, 3: 26, 8: 35, 5: 3, 1: 6})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 3
label_counts: defaultdict(<class 'int'>, {1: 495, 0: 158, 8: 254, 3: 113, 2: 22, 7: 3, 6: 7, 9: 1})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 4
label_counts: defaultdict(<class 'int'>, {6: 69, 7: 207, 8: 302, 3: 297, 0: 55, 1: 31, 5: 7, 9: 14, 4: 1})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 5
label_counts: defaultdict(<class 'int'>, {5: 312, 3: 545, 2: 45, 8: 47, 7: 8, 0: 12, 4: 1, 9: 3})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 6
label_counts: defaultdict(<class 'int'>, {3: 547, 5: 74, 6: 90, 7: 41, 1: 25, 2: 55, 9: 46, 8: 15, 0: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 7
label_counts: defaultdict(<class 'int'>, {8: 546, 7: 55, 2: 54, 3: 1041, 4: 19, 6: 71})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 8
label_counts: defaultdict(<class 'int'>, {2: 159, 7: 322, 9: 119, 4: 87, 5: 291, 8: 140, 6: 92, 3: 8, 0: 24, 1: 6})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 9
label_counts: defaultdict(<class 'int'>, {0: 199, 7: 464, 2: 203, 4: 138, 3: 101, 8: 47, 5: 114, 1: 5, 9: 4})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 10
label_counts: defaultdict(<class 'int'>, {2: 980, 6: 188, 7: 951, 3: 39, 0: 3, 5: 8})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 11
label_counts: defaultdict(<class 'int'>, {5: 579, 4: 100, 0: 803, 2: 58, 1: 11})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 12
label_counts: defaultdict(<class 'int'>, {9: 1822, 3: 372, 6: 311, 4: 240, 5: 107, 0: 46, 2: 2, 8: 10})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 13
label_counts: defaultdict(<class 'int'>, {6: 708, 4: 126, 2: 62, 0: 22, 5: 9, 3: 198, 7: 402, 1: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 14
label_counts: defaultdict(<class 'int'>, {3: 380, 7: 628, 4: 393, 6: 54, 1: 54, 0: 2})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 15
label_counts: defaultdict(<class 'int'>, {9: 294, 7: 199, 1: 279, 8: 107, 4: 57, 6: 16, 3: 8, 2: 4, 0: 5})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 16
label_counts: defaultdict(<class 'int'>, {9: 192, 8: 72, 2: 565, 6: 243, 1: 61, 0: 75, 4: 2, 5: 22, 3: 36, 7: 16})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 17
label_counts: defaultdict(<class 'int'>, {6: 102, 1: 376, 0: 255, 3: 14, 2: 14, 5: 4, 9: 3})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 18
label_counts: defaultdict(<class 'int'>, {4: 749, 3: 407, 5: 258, 2: 7})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 19
label_counts: defaultdict(<class 'int'>, {6: 106, 5: 93, 4: 122, 0: 220, 1: 74, 3: 4, 2: 76, 9: 2, 7: 1})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 20
label_counts: defaultdict(<class 'int'>, {4: 386, 5: 1231, 1: 467, 3: 238, 2: 21})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 21
label_counts: defaultdict(<class 'int'>, {2: 419, 8: 99, 9: 130, 6: 399, 1: 46, 3: 3, 5: 12, 7: 5, 0: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 22
label_counts: defaultdict(<class 'int'>, {1: 834, 0: 234, 2: 285})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 23
label_counts: defaultdict(<class 'int'>, {6: 331, 2: 150, 0: 170, 3: 37, 9: 27, 1: 86, 4: 12, 5: 1, 7: 1})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 24
label_counts: defaultdict(<class 'int'>, {7: 429, 6: 73, 4: 95, 1: 62, 9: 14, 3: 14, 8: 2, 5: 3})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 25
label_counts: defaultdict(<class 'int'>, {2: 154, 1: 744, 4: 387, 3: 4, 7: 9, 5: 21})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 26
label_counts: defaultdict(<class 'int'>, {0: 436, 6: 80, 2: 274, 3: 244, 1: 73, 7: 42, 9: 48, 5: 7, 8: 11, 4: 2})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 27
label_counts: defaultdict(<class 'int'>, {5: 449, 9: 408, 7: 274, 4: 214, 0: 44, 1: 18, 2: 3, 6: 2})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 28
label_counts: defaultdict(<class 'int'>, {0: 534, 3: 404, 2: 383})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 29
label_counts: defaultdict(<class 'int'>, {8: 790, 0: 186, 2: 135, 4: 882, 1: 27, 3: 4, 6: 3, 5: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 30
label_counts: defaultdict(<class 'int'>, {2: 457, 5: 528, 1: 164, 0: 298, 4: 44, 3: 15})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 31
label_counts: defaultdict(<class 'int'>, {9: 275, 1: 451, 6: 12, 4: 110, 8: 27, 0: 8, 7: 1, 3: 2})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 32
label_counts: defaultdict(<class 'int'>, {0: 68, 9: 625, 5: 252, 2: 70, 3: 29, 7: 9, 6: 3, 8: 6, 1: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 33
label_counts: defaultdict(<class 'int'>, {6: 877, 2: 252, 0: 237, 1: 72, 4: 42, 3: 55, 5: 1})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 34
label_counts: defaultdict(<class 'int'>, {0: 675, 4: 234, 1: 71, 9: 128, 6: 57, 2: 44, 7: 6, 5: 20, 3: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 35
label_counts: defaultdict(<class 'int'>, {6: 421, 8: 134, 2: 59, 7: 73, 9: 67, 5: 7, 3: 3, 1: 1})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 36
label_counts: defaultdict(<class 'int'>, {6: 467, 9: 45, 4: 63, 1: 212, 3: 18, 2: 79, 8: 24, 7: 126, 0: 13})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 37
label_counts: defaultdict(<class 'int'>, {8: 1474, 5: 70, 6: 84, 7: 77, 2: 10, 3: 15, 0: 7, 1: 2})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 38
label_counts: defaultdict(<class 'int'>, {1: 734, 7: 245, 8: 100, 3: 44, 5: 28, 9: 7, 6: 28, 4: 8})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 39
label_counts: defaultdict(<class 'int'>, {5: 192, 9: 354, 8: 33, 0: 84, 4: 4, 1: 7, 6: 1, 3: 1})

Join ratio / total clients: 1.0 / 40
Finished creating server and clients.
Trainable_prototypes(
  (embedings): Embedding(10, 512)
  (middle): Sequential(
    (0): Sequential(
      (0): Linear(in_features=512, out_features=512, bias=True)
      (1): ReLU()
    )
  )
  (fc): Linear(in_features=512, out_features=512, bias=True)
)
tobetrained:
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
Edge 9 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 8 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 7 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 6 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 5 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 4 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 3 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 2 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 1 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 0 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
readyList:
[0, 2, 7, 8, 6, 4, 5, 3, 1, 9]
aggregation_buffer:
[0, 2, 7, 8, 6, 4, 5, 3, 1, 9]
class-wise minimum distance tensor([2.3302, 1.8775, 1.4708, 1.2985, 1.6960, 1.2985, 1.6565, 1.7440, 1.7687,
        1.6960], device='cuda:0')
min_gap tensor(1.2985, device='cuda:0')
max_gap tensor(2.3302, device='cuda:0')
Server loss: 4.200445652008057
Number of samples: 316
end Update
server_global_time: 0.9116502031683922
only_train_time: 11.66371301561594

-------------Global Round number: 0-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8535
Averaged Test Accuracy (Prototype Model): 0.6041
Averaged Train Loss (Regular Model): 0.5593
Averaged Train Loss (Regular + Proto): 0.5593
Std Test Accuracy (Regular Model): 0.1498
Std Test Accuracy (Prototype Model): 0.2325
tobetrained:
[0, 2, 7, 8, 6, 4, 5, 3, 1, 9]
Edge 0 begin training
Edge 2 begin training
Edge 7 begin training
Edge 8 begin training
Edge 6 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
Edge 9 begin training
readyList:
[6, 0, 8, 2, 7, 4, 5, 9, 3, 1]
aggregation_buffer:
[6, 0, 8, 2, 7, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([1.6188, 1.5925, 1.3318, 1.1351, 1.3541, 1.1351, 1.4474, 1.3496, 1.4214,
        1.3496], device='cuda:0')
min_gap tensor(1.1351, device='cuda:0')
max_gap tensor(1.6188, device='cuda:0')
Server loss: 2.8470981121063232
end Update
server_global_time: 1.799395889043808
only_train_time: 28.611855432391167

-------------Global Round number: 1-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9343
Averaged Test Accuracy (Prototype Model): 0.8992
Averaged Train Loss (Regular Model): 0.2594
Averaged Train Loss (Regular + Proto): 0.3786
Std Test Accuracy (Regular Model): 0.0592
Std Test Accuracy (Prototype Model): 0.1055
tobetrained:
[6, 0, 8, 2, 7, 4, 5, 9, 3, 1]
Edge 6 begin training
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 9, 4, 5, 3, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 9, 4, 5, 3, 1]
class-wise minimum distance tensor([2.1729, 2.3194, 1.9473, 1.6755, 1.9389, 1.6755, 2.0034, 1.9099, 2.0563,
        1.9099], device='cuda:0')
min_gap tensor(1.6755, device='cuda:0')
max_gap tensor(2.3194, device='cuda:0')
Server loss: 3.208406686782837
end Update
server_global_time: 2.67227640748024
only_train_time: 45.741731859743595

-------------Global Round number: 2-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9563
Averaged Test Accuracy (Prototype Model): 0.9258
Averaged Train Loss (Regular Model): 0.1392
Averaged Train Loss (Regular + Proto): 0.2632
Std Test Accuracy (Regular Model): 0.0347
Std Test Accuracy (Prototype Model): 0.0651
tobetrained:
[0, 6, 8, 2, 7, 9, 4, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 9 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[8, 0, 6, 2, 7, 4, 9, 5, 3, 1]
aggregation_buffer:
[8, 0, 6, 2, 7, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([2.9721, 3.2902, 2.7716, 2.3961, 2.7625, 2.3961, 2.8835, 2.7802, 2.9914,
        2.7625], device='cuda:0')
min_gap tensor(2.3961, device='cuda:0')
max_gap tensor(3.2902, device='cuda:0')
Server loss: 3.4201784133911133
end Update
server_global_time: 3.5416692793369293
only_train_time: 63.128706112504005

-------------Global Round number: 3-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9663
Averaged Test Accuracy (Prototype Model): 0.9411
Averaged Train Loss (Regular Model): 0.0782
Averaged Train Loss (Regular + Proto): 0.2252
Std Test Accuracy (Regular Model): 0.0205
Std Test Accuracy (Prototype Model): 0.0378
tobetrained:
[8, 0, 6, 2, 7, 4, 9, 5, 3, 1]
Edge 8 begin training
Edge 0 begin training
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 8, 7, 6, 2, 4, 5, 9, 3, 1]
aggregation_buffer:
[0, 8, 7, 6, 2, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([3.8470, 4.2886, 3.6956, 3.1792, 3.8714, 3.1792, 3.8125, 3.8895, 4.0133,
        3.8714], device='cuda:0')
min_gap tensor(3.1792, device='cuda:0')
max_gap tensor(4.2886, device='cuda:0')
Server loss: 3.9791452884674072
end Update
server_global_time: 4.448526747524738
only_train_time: 80.36924596875906

-------------Global Round number: 4-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9696
Averaged Test Accuracy (Prototype Model): 0.9459
Averaged Train Loss (Regular Model): 0.0491
Averaged Train Loss (Regular + Proto): 0.2236
Std Test Accuracy (Regular Model): 0.0171
Std Test Accuracy (Prototype Model): 0.0321
tobetrained:
[0, 8, 7, 6, 2, 4, 5, 9, 3, 1]
Edge 0 begin training
Edge 8 begin training
Edge 7 begin training
Edge 6 begin training
Edge 2 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 2, 7, 8, 9, 5, 3, 4, 1]
aggregation_buffer:
[0, 6, 2, 7, 8, 9, 5, 3, 4, 1]
class-wise minimum distance tensor([4.8309, 5.4442, 4.7312, 4.0434, 5.0526, 4.0434, 4.9237, 4.9393, 5.0007,
        4.9393], device='cuda:0')
min_gap tensor(4.0434, device='cuda:0')
max_gap tensor(5.4442, device='cuda:0')
Server loss: 4.09496545791626
end Update
server_global_time: 5.333310402929783
only_train_time: 97.4965120702982

-------------Global Round number: 5-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9722
Averaged Test Accuracy (Prototype Model): 0.9498
Averaged Train Loss (Regular Model): 0.0326
Averaged Train Loss (Regular + Proto): 0.2356
Std Test Accuracy (Regular Model): 0.0187
Std Test Accuracy (Prototype Model): 0.0250
tobetrained:
[0, 6, 2, 7, 8, 9, 5, 3, 4, 1]
Edge 0 begin training
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 8 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 4 begin training
Edge 1 begin training
readyList:
[7, 0, 8, 6, 2, 9, 4, 3, 5, 1]
aggregation_buffer:
[7, 0, 8, 6, 2, 9, 4, 3, 5, 1]
class-wise minimum distance tensor([5.7942, 6.5063, 5.8387, 5.0041, 6.3059, 5.0041, 6.0715, 6.0544, 6.2378,
        6.0544], device='cuda:0')
min_gap tensor(5.0041, device='cuda:0')
max_gap tensor(6.5063, device='cuda:0')
Server loss: 4.429306507110596
end Update
server_global_time: 6.259234368801117
only_train_time: 115.84878958016634

-------------Global Round number: 6-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9741
Averaged Test Accuracy (Prototype Model): 0.9559
Averaged Train Loss (Regular Model): 0.0218
Averaged Train Loss (Regular + Proto): 0.2522
Std Test Accuracy (Regular Model): 0.0153
Std Test Accuracy (Prototype Model): 0.0221
tobetrained:
[7, 0, 8, 6, 2, 9, 4, 3, 5, 1]
Edge 7 begin training
Edge 0 begin training
Edge 8 begin training
Edge 6 begin training
Edge 2 begin training
Edge 9 begin training
Edge 4 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
class-wise minimum distance tensor([6.8374, 7.8311, 7.0460, 5.9109, 7.6118, 5.9109, 7.3335, 7.0928, 7.2562,
        7.0928], device='cuda:0')
min_gap tensor(5.9109, device='cuda:0')
max_gap tensor(7.8311, device='cuda:0')
Server loss: 4.71121072769165
end Update
server_global_time: 7.1587032079696655
only_train_time: 132.97580631822348

-------------Global Round number: 7-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9744
Averaged Test Accuracy (Prototype Model): 0.9586
Averaged Train Loss (Regular Model): 0.0156
Averaged Train Loss (Regular + Proto): 0.2742
Std Test Accuracy (Regular Model): 0.0159
Std Test Accuracy (Prototype Model): 0.0217
tobetrained:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[0, 8, 2, 7, 6, 4, 5, 9, 3, 1]
aggregation_buffer:
[0, 8, 2, 7, 6, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([8.1733, 9.1333, 8.3026, 6.8551, 8.8658, 6.8551, 8.6304, 8.2513, 8.3630,
        8.2513], device='cuda:0')
min_gap tensor(6.8551, device='cuda:0')
max_gap tensor(9.1333, device='cuda:0')
Server loss: 4.947656154632568
end Update
server_global_time: 8.042459487915039
only_train_time: 150.48392413556576

-------------Global Round number: 8-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9748
Averaged Test Accuracy (Prototype Model): 0.9615
Averaged Train Loss (Regular Model): 0.0119
Averaged Train Loss (Regular + Proto): 0.2984
Std Test Accuracy (Regular Model): 0.0151
Std Test Accuracy (Prototype Model): 0.0208
tobetrained:
[0, 8, 2, 7, 6, 4, 5, 9, 3, 1]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 6 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 5, 9, 3, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([ 9.3536, 10.6105,  9.6019,  7.9039, 10.2225,  7.9039,  9.9204,  9.3848,
         9.7509,  9.3848], device='cuda:0')
min_gap tensor(7.9039, device='cuda:0')
max_gap tensor(10.6105, device='cuda:0')
Server loss: 5.2594170570373535
end Update
server_global_time: 8.944940581917763
only_train_time: 167.80234837532043

-------------Global Round number: 9-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9757
Averaged Test Accuracy (Prototype Model): 0.9628
Averaged Train Loss (Regular Model): 0.0086
Averaged Train Loss (Regular + Proto): 0.3220
Std Test Accuracy (Regular Model): 0.0150
Std Test Accuracy (Prototype Model): 0.0211
tobetrained:
[0, 6, 8, 2, 7, 4, 5, 9, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 7, 2, 4, 9, 5, 1, 3]
aggregation_buffer:
[0, 6, 8, 7, 2, 4, 9, 5, 1, 3]
class-wise minimum distance tensor([10.6767, 12.1367, 11.0911,  8.9544, 11.7073,  8.9544, 11.2417, 10.6800,
        10.9240, 10.6800], device='cuda:0')
min_gap tensor(8.9544, device='cuda:0')
max_gap tensor(12.1367, device='cuda:0')
Server loss: 7.063760757446289
end Update
server_global_time: 9.871768467128277
only_train_time: 185.9011303782463

-------------Global Round number: 10-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9760
Averaged Test Accuracy (Prototype Model): 0.9647
Averaged Train Loss (Regular Model): 0.0069
Averaged Train Loss (Regular + Proto): 0.3482
Std Test Accuracy (Regular Model): 0.0146
Std Test Accuracy (Prototype Model): 0.0201
tobetrained:
[0, 6, 8, 7, 2, 4, 9, 5, 1, 3]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 1 begin training
Edge 3 begin training
readyList:
[0, 6, 8, 7, 2, 4, 5, 3, 9, 1]
aggregation_buffer:
[0, 6, 8, 7, 2, 4, 5, 3, 9, 1]
class-wise minimum distance tensor([12.1233, 13.4988, 12.6449, 10.1501, 13.3415, 10.1501, 12.9891, 12.2097,
        12.3086, 12.2097], device='cuda:0')
min_gap tensor(10.1501, device='cuda:0')
max_gap tensor(13.4988, device='cuda:0')
Server loss: 6.794689178466797
end Update
server_global_time: 10.772247105836868
only_train_time: 203.6742174476385

-------------Global Round number: 11-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9753
Averaged Test Accuracy (Prototype Model): 0.9653
Averaged Train Loss (Regular Model): 0.0055
Averaged Train Loss (Regular + Proto): 0.3736
Std Test Accuracy (Regular Model): 0.0149
Std Test Accuracy (Prototype Model): 0.0189
tobetrained:
[0, 6, 8, 7, 2, 4, 5, 3, 9, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 9 begin training
Edge 1 begin training
readyList:
[0, 6, 7, 2, 8, 4, 9, 5, 3, 1]
aggregation_buffer:
[0, 6, 7, 2, 8, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([13.5850, 15.0561, 14.4061, 11.6049, 14.5905, 11.6049, 14.7037, 13.5959,
        13.6849, 13.5959], device='cuda:0')
min_gap tensor(11.6049, device='cuda:0')
max_gap tensor(15.0561, device='cuda:0')
Server loss: 5.975912094116211
end Update
server_global_time: 11.623879350721836
only_train_time: 221.4229810386896

-------------Global Round number: 12-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9769
Averaged Test Accuracy (Prototype Model): 0.9682
Averaged Train Loss (Regular Model): 0.0041
Averaged Train Loss (Regular + Proto): 0.4022
Std Test Accuracy (Regular Model): 0.0137
Std Test Accuracy (Prototype Model): 0.0179
tobetrained:
[0, 6, 7, 2, 8, 4, 9, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 7 begin training
Edge 2 begin training
Edge 8 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[6, 0, 8, 2, 7, 9, 4, 5, 3, 1]
aggregation_buffer:
[6, 0, 8, 2, 7, 9, 4, 5, 3, 1]
class-wise minimum distance tensor([15.1551, 16.6422, 16.1292, 12.8730, 16.3425, 12.8730, 16.3240, 15.2397,
        15.3697, 15.2397], device='cuda:0')
min_gap tensor(12.8730, device='cuda:0')
max_gap tensor(16.6422, device='cuda:0')
Server loss: 8.637472152709961
end Update
server_global_time: 12.534306392073631
only_train_time: 239.32103204727173

-------------Global Round number: 13-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9766
Averaged Test Accuracy (Prototype Model): 0.9686
Averaged Train Loss (Regular Model): 0.0034
Averaged Train Loss (Regular + Proto): 0.4337
Std Test Accuracy (Regular Model): 0.0136
Std Test Accuracy (Prototype Model): 0.0180
tobetrained:
[6, 0, 8, 2, 7, 9, 4, 5, 3, 1]
Edge 6 begin training
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 9 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 7, 2, 4, 9, 5, 3, 1]
aggregation_buffer:
[0, 6, 8, 7, 2, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([16.9043, 18.6416, 17.7888, 14.4552, 18.0031, 14.4552, 17.9170, 16.9939,
        17.1741, 16.9939], device='cuda:0')
min_gap tensor(14.4552, device='cuda:0')
max_gap tensor(18.6416, device='cuda:0')
Server loss: 7.7165608406066895
end Update
server_global_time: 13.437813378870487
only_train_time: 257.12305195629597

-------------Global Round number: 14-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9769
Averaged Test Accuracy (Prototype Model): 0.9707
Averaged Train Loss (Regular Model): 0.0025
Averaged Train Loss (Regular + Proto): 0.4691
Std Test Accuracy (Regular Model): 0.0138
Std Test Accuracy (Prototype Model): 0.0170
tobetrained:
[0, 6, 8, 7, 2, 4, 9, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 8, 2, 7, 6, 4, 5, 9, 3, 1]
aggregation_buffer:
[0, 8, 2, 7, 6, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([18.5561, 20.6893, 20.2032, 15.9676, 19.9623, 15.9676, 20.2519, 18.9071,
        18.9401, 18.9071], device='cuda:0')
min_gap tensor(15.9676, device='cuda:0')
max_gap tensor(20.6893, device='cuda:0')
Server loss: 8.391345977783203
end Update
server_global_time: 14.351633980870247
only_train_time: 274.6682828813791

-------------Global Round number: 15-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9774
Averaged Test Accuracy (Prototype Model): 0.9713
Averaged Train Loss (Regular Model): 0.0019
Averaged Train Loss (Regular + Proto): 0.5086
Std Test Accuracy (Regular Model): 0.0130
Std Test Accuracy (Prototype Model): 0.0173
tobetrained:
[0, 8, 2, 7, 6, 4, 5, 9, 3, 1]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 6 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 2, 7, 8, 4, 9, 5, 3, 1]
aggregation_buffer:
[0, 6, 2, 7, 8, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([20.7642, 23.1665, 22.1424, 17.9614, 21.9730, 17.9614, 22.4049, 21.0170,
        21.2678, 21.0170], device='cuda:0')
min_gap tensor(17.9614, device='cuda:0')
max_gap tensor(23.1665, device='cuda:0')
Server loss: 7.227288246154785
end Update
server_global_time: 15.240054689347744
only_train_time: 291.87766405195

-------------Global Round number: 16-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9777
Averaged Test Accuracy (Prototype Model): 0.9719
Averaged Train Loss (Regular Model): 0.0016
Averaged Train Loss (Regular + Proto): 0.5576
Std Test Accuracy (Regular Model): 0.0131
Std Test Accuracy (Prototype Model): 0.0168
tobetrained:
[0, 6, 2, 7, 8, 4, 9, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 8 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
class-wise minimum distance tensor([23.2777, 25.6525, 25.1185, 19.9678, 25.0335, 19.9678, 25.1174, 23.7630,
        23.8318, 23.7630], device='cuda:0')
min_gap tensor(19.9678, device='cuda:0')
max_gap tensor(25.6525, device='cuda:0')
Server loss: 7.845026969909668
end Update
server_global_time: 16.107542157173157
only_train_time: 308.7712102532387

-------------Global Round number: 17-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9779
Averaged Test Accuracy (Prototype Model): 0.9725
Averaged Train Loss (Regular Model): 0.0013
Averaged Train Loss (Regular + Proto): 0.6121
Std Test Accuracy (Regular Model): 0.0127
Std Test Accuracy (Prototype Model): 0.0162
tobetrained:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[6, 2, 7, 0, 8, 4, 9, 5, 3, 1]
aggregation_buffer:
[6, 2, 7, 0, 8, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([26.0555, 28.7892, 27.8204, 22.5324, 27.2995, 22.5324, 28.0624, 26.4598,
        26.8870, 26.4598], device='cuda:0')
min_gap tensor(22.5324, device='cuda:0')
max_gap tensor(28.7892, device='cuda:0')
Server loss: 10.529609680175781
end Update
server_global_time: 17.2115805670619
only_train_time: 326.4394314363599

-------------Global Round number: 18-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9785
Averaged Test Accuracy (Prototype Model): 0.9739
Averaged Train Loss (Regular Model): 0.0010
Averaged Train Loss (Regular + Proto): 0.6807
Std Test Accuracy (Regular Model): 0.0125
Std Test Accuracy (Prototype Model): 0.0161
tobetrained:
[6, 2, 7, 0, 8, 4, 9, 5, 3, 1]
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 0 begin training
Edge 8 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([28.8830, 31.9305, 31.4185, 24.8370, 30.4385, 24.8370, 31.1696, 29.3859,
        29.6563, 29.3859], device='cuda:0')
min_gap tensor(24.8370, device='cuda:0')
max_gap tensor(31.9305, device='cuda:0')
Server loss: 9.717103004455566
end Update
server_global_time: 18.063537947833538
only_train_time: 343.0571418479085

-------------Global Round number: 19-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9784
Averaged Test Accuracy (Prototype Model): 0.9735
Averaged Train Loss (Regular Model): 0.0008
Averaged Train Loss (Regular + Proto): 0.7508
Std Test Accuracy (Regular Model): 0.0124
Std Test Accuracy (Prototype Model): 0.0159
tobetrained:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 3, 9, 5, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 3, 9, 5, 1]
class-wise minimum distance tensor([32.2225, 35.7435, 34.8951, 28.1672, 33.8750, 28.1672, 34.6934, 32.7867,
        33.8708, 32.4138], device='cuda:0')
min_gap tensor(28.1672, device='cuda:0')
max_gap tensor(35.7435, device='cuda:0')
Server loss: 13.060310363769531
Number of samples: 316
end Update
server_global_time: 18.928253158926964
only_train_time: 360.29306069016457

-------------Global Round number: 20-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9787
Averaged Test Accuracy (Prototype Model): 0.9748
Averaged Train Loss (Regular Model): 0.0007
Averaged Train Loss (Regular + Proto): 0.8358
Std Test Accuracy (Regular Model): 0.0124
Std Test Accuracy (Prototype Model): 0.0154
tobetrained:
[0, 6, 8, 2, 7, 4, 3, 9, 5, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 3 begin training
Edge 9 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 7, 2, 5, 9, 3, 4, 1]
aggregation_buffer:
[0, 6, 8, 7, 2, 5, 9, 3, 4, 1]
class-wise minimum distance tensor([36.4549, 39.4175, 39.1349, 31.6006, 37.8670, 31.6006, 39.2948, 36.4984,
        37.9401, 36.0665], device='cuda:0')
min_gap tensor(31.6006, device='cuda:0')
max_gap tensor(39.4175, device='cuda:0')
Server loss: 9.907648086547852
end Update
server_global_time: 19.7972879037261
only_train_time: 377.4411653652787

-------------Global Round number: 21-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9793
Averaged Test Accuracy (Prototype Model): 0.9751
Averaged Train Loss (Regular Model): 0.0005
Averaged Train Loss (Regular + Proto): 0.9355
Std Test Accuracy (Regular Model): 0.0124
Std Test Accuracy (Prototype Model): 0.0153
tobetrained:
[0, 6, 8, 7, 2, 5, 9, 3, 4, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 4 begin training
Edge 1 begin training
readyList:
[0, 8, 2, 7, 6, 4, 5, 9, 1, 3]
aggregation_buffer:
[0, 8, 2, 7, 6, 4, 5, 9, 1, 3]
class-wise minimum distance tensor([40.7621, 43.8639, 43.6357, 35.8779, 42.1120, 35.8779, 43.3187, 41.0187,
        42.7371, 40.1622], device='cuda:0')
min_gap tensor(35.8779, device='cuda:0')
max_gap tensor(43.8639, device='cuda:0')
Server loss: 9.129348754882812
end Update
server_global_time: 20.745088674128056
only_train_time: 395.6089860275388

-------------Global Round number: 22-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9786
Averaged Test Accuracy (Prototype Model): 0.9756
Averaged Train Loss (Regular Model): 0.0004
Averaged Train Loss (Regular + Proto): 1.0547
Std Test Accuracy (Regular Model): 0.0123
Std Test Accuracy (Prototype Model): 0.0146
tobetrained:
[0, 8, 2, 7, 6, 4, 5, 9, 1, 3]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 6 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 1 begin training
Edge 3 begin training
readyList:
[6, 2, 7, 0, 8, 4, 5, 3, 9, 1]
aggregation_buffer:
[6, 2, 7, 0, 8, 4, 5, 3, 9, 1]
class-wise minimum distance tensor([44.1078, 46.8272, 47.2544, 37.9183, 45.3693, 37.9183, 49.0787, 44.3739,
        45.3387, 43.0414], device='cuda:0')
min_gap tensor(37.9183, device='cuda:0')
max_gap tensor(49.0787, device='cuda:0')
Server loss: 8.876102447509766
end Update
server_global_time: 21.62443184107542
only_train_time: 412.61727876216173

-------------Global Round number: 23-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9785
Averaged Test Accuracy (Prototype Model): 0.9757
Averaged Train Loss (Regular Model): 0.0156
Averaged Train Loss (Regular + Proto): 1.3122
Std Test Accuracy (Regular Model): 0.0124
Std Test Accuracy (Prototype Model): 0.0159
tobetrained:
[6, 2, 7, 0, 8, 4, 5, 3, 9, 1]
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 0 begin training
Edge 8 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 9 begin training
Edge 1 begin training
readyList:
[0, 6, 2, 7, 8, 4, 5, 3, 9, 1]
aggregation_buffer:
[0, 6, 2, 7, 8, 4, 5, 3, 9, 1]
class-wise minimum distance tensor([45.5188, 48.7915, 48.4548, 38.8163, 45.6637, 38.8163, 51.4713, 44.4610,
        43.4400, 41.5321], device='cuda:0')
min_gap tensor(38.8163, device='cuda:0')
max_gap tensor(51.4713, device='cuda:0')
Server loss: 11.747078895568848
end Update
server_global_time: 22.81254005432129
only_train_time: 430.7185483574867

-------------Global Round number: 24-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9572
Averaged Test Accuracy (Prototype Model): 0.9278
Averaged Train Loss (Regular Model): 0.1469
Averaged Train Loss (Regular + Proto): 2.3307
Std Test Accuracy (Regular Model): 0.1052
Std Test Accuracy (Prototype Model): 0.2328
tobetrained:
[0, 6, 2, 7, 8, 4, 5, 3, 9, 1]
Edge 0 begin training
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 8 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 9 begin training
Edge 1 begin training
readyList:
[0, 8, 6, 2, 7, 4, 5, 3, 1, 9]
aggregation_buffer:
[0, 8, 6, 2, 7, 4, 5, 3, 1, 9]
class-wise minimum distance tensor([53.3712, 52.4843, 51.0909, 42.8694, 49.3253, 42.8694, 55.5234, 46.0965,
        47.0107, 44.7390], device='cuda:0')
min_gap tensor(42.8694, device='cuda:0')
max_gap tensor(55.5234, device='cuda:0')
Server loss: 20.934804916381836
end Update
server_global_time: 23.750221326947212
only_train_time: 450.0533426105976

-------------Global Round number: 25-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9616
Averaged Test Accuracy (Prototype Model): 0.9293
Averaged Train Loss (Regular Model): 0.1303
Averaged Train Loss (Regular + Proto): 2.5245
Std Test Accuracy (Regular Model): 0.0955
Std Test Accuracy (Prototype Model): 0.2356
tobetrained:
[0, 8, 6, 2, 7, 4, 5, 3, 1, 9]
Edge 0 begin training
Edge 8 begin training
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
Edge 9 begin training
readyList:
[0, 6, 8, 7, 2, 4, 5, 9, 3, 1]
aggregation_buffer:
[0, 6, 8, 7, 2, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([57.4218, 56.6778, 53.6374, 46.0093, 54.8743, 46.0093, 59.4200, 49.2867,
        50.5723, 49.2867], device='cuda:0')
min_gap tensor(46.0093, device='cuda:0')
max_gap tensor(59.4200, device='cuda:0')
Server loss: 21.456100463867188
end Update
server_global_time: 24.67887518554926
only_train_time: 468.17669059336185

-------------Global Round number: 26-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9434
Averaged Test Accuracy (Prototype Model): 0.8974
Averaged Train Loss (Regular Model): 0.3501
Averaged Train Loss (Regular + Proto): 3.1600
Std Test Accuracy (Regular Model): 0.1270
Std Test Accuracy (Prototype Model): 0.2722
tobetrained:
[0, 6, 8, 7, 2, 4, 5, 9, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([63.0800, 62.6399, 58.8857, 51.1651, 60.9800, 51.1651, 66.4168, 55.1614,
        57.7206, 55.1614], device='cuda:0')
min_gap tensor(51.1651, device='cuda:0')
max_gap tensor(66.4168, device='cuda:0')
Server loss: 20.386125564575195
end Update
server_global_time: 25.67194225639105
only_train_time: 486.3817242383957

-------------Global Round number: 27-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9570
Averaged Test Accuracy (Prototype Model): 0.9150
Averaged Train Loss (Regular Model): 0.1385
Averaged Train Loss (Regular + Proto): 3.1230
Std Test Accuracy (Regular Model): 0.0956
Std Test Accuracy (Prototype Model): 0.2355
tobetrained:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[6, 2, 7, 0, 8, 9, 4, 3, 5, 1]
aggregation_buffer:
[6, 2, 7, 0, 8, 9, 4, 3, 5, 1]
class-wise minimum distance tensor([64.3227, 65.7008, 60.4613, 54.2477, 63.1596, 54.2477, 67.1970, 59.8211,
        60.5307, 59.8211], device='cuda:0')
min_gap tensor(54.2477, device='cuda:0')
max_gap tensor(67.1970, device='cuda:0')
Server loss: 27.031715393066406
end Update
server_global_time: 26.583264842629433
only_train_time: 504.69296618551016

-------------Global Round number: 28-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9145
Averaged Test Accuracy (Prototype Model): 0.8739
Averaged Train Loss (Regular Model): 0.5455
Averaged Train Loss (Regular + Proto): 4.7981
Std Test Accuracy (Regular Model): 0.1778
Std Test Accuracy (Prototype Model): 0.2984
tobetrained:
[6, 2, 7, 0, 8, 9, 4, 3, 5, 1]
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 0 begin training
Edge 8 begin training
Edge 9 begin training
Edge 4 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[6, 0, 8, 7, 2, 4, 5, 9, 3, 1]
aggregation_buffer:
[6, 0, 8, 7, 2, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([65.3318, 68.1017, 62.4414, 58.1522, 62.8459, 58.1522, 67.1084, 63.8817,
        62.2330, 61.6385], device='cuda:0')
min_gap tensor(58.1522, device='cuda:0')
max_gap tensor(68.1017, device='cuda:0')
Server loss: 24.154769897460938
end Update
server_global_time: 27.494560971856117
only_train_time: 522.5540964901447

-------------Global Round number: 29-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9179
Averaged Test Accuracy (Prototype Model): 0.8849
Averaged Train Loss (Regular Model): 0.3713
Averaged Train Loss (Regular + Proto): 4.8705
Std Test Accuracy (Regular Model): 0.1747
Std Test Accuracy (Prototype Model): 0.2761
tobetrained:
[6, 0, 8, 7, 2, 4, 5, 9, 3, 1]
Edge 6 begin training
Edge 0 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 4 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
class-wise minimum distance tensor([68.5137, 71.5945, 66.9863, 63.9769, 64.4512, 63.9769, 69.6783, 61.7282,
        66.6891, 61.7282], device='cuda:0')
min_gap tensor(61.7282, device='cuda:0')
max_gap tensor(71.5945, device='cuda:0')
Server loss: 26.026071548461914
end Update
server_global_time: 28.41156715154648
only_train_time: 540.7181527763605

-------------Global Round number: 30-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9120
Averaged Test Accuracy (Prototype Model): 0.8947
Averaged Train Loss (Regular Model): 0.2322
Averaged Train Loss (Regular + Proto): 5.2668
Std Test Accuracy (Regular Model): 0.1994
Std Test Accuracy (Prototype Model): 0.2591
tobetrained:
[0, 6, 8, 2, 7, 4, 9, 3, 5, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 7, 2, 9, 4, 5, 3, 1]
aggregation_buffer:
[0, 6, 8, 7, 2, 9, 4, 5, 3, 1]
class-wise minimum distance tensor([70.8602, 73.8350, 69.1131, 66.2669, 68.2594, 66.2669, 72.3932, 66.1220,
        68.6433, 66.1220], device='cuda:0')
min_gap tensor(66.1220, device='cuda:0')
max_gap tensor(73.8350, device='cuda:0')
Server loss: 24.437744140625
end Update
server_global_time: 29.328577801585197
only_train_time: 558.5120916888118

-------------Global Round number: 31-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9229
Averaged Test Accuracy (Prototype Model): 0.8579
Averaged Train Loss (Regular Model): 0.4308
Averaged Train Loss (Regular + Proto): 5.9982
Std Test Accuracy (Regular Model): 0.1629
Std Test Accuracy (Prototype Model): 0.2885
tobetrained:
[0, 6, 8, 7, 2, 9, 4, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 9 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 8, 6, 7, 2, 9, 4, 5, 3, 1]
aggregation_buffer:
[0, 8, 6, 7, 2, 9, 4, 5, 3, 1]
class-wise minimum distance tensor([71.9762, 75.1303, 71.9762, 69.4749, 71.7449, 69.4749, 73.7958, 66.8931,
        71.8145, 66.8931], device='cuda:0')
min_gap tensor(66.8931, device='cuda:0')
max_gap tensor(75.1303, device='cuda:0')
Server loss: 21.4351806640625
end Update
server_global_time: 30.257617741823196
only_train_time: 576.9360727444291

-------------Global Round number: 32-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9126
Averaged Test Accuracy (Prototype Model): 0.8836
Averaged Train Loss (Regular Model): 0.3787
Averaged Train Loss (Regular + Proto): 6.1875
Std Test Accuracy (Regular Model): 0.1879
Std Test Accuracy (Prototype Model): 0.2446
tobetrained:
[0, 8, 6, 7, 2, 9, 4, 5, 3, 1]
Edge 0 begin training
Edge 8 begin training
Edge 6 begin training
Edge 7 begin training
Edge 2 begin training
Edge 9 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 7, 8, 6, 2, 4, 9, 3, 5, 1]
aggregation_buffer:
[0, 7, 8, 6, 2, 4, 9, 3, 5, 1]
class-wise minimum distance tensor([75.0135, 78.7408, 74.1810, 71.4873, 73.5340, 71.4873, 75.0563, 68.9824,
        73.8746, 68.9824], device='cuda:0')
min_gap tensor(68.9824, device='cuda:0')
max_gap tensor(78.7408, device='cuda:0')
Server loss: 27.036293029785156
end Update
server_global_time: 31.244769491255283
only_train_time: 595.0169896706939

-------------Global Round number: 33-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9247
Averaged Test Accuracy (Prototype Model): 0.8703
Averaged Train Loss (Regular Model): 0.4686
Averaged Train Loss (Regular + Proto): 6.8715
Std Test Accuracy (Regular Model): 0.1468
Std Test Accuracy (Prototype Model): 0.2509
tobetrained:
[0, 7, 8, 6, 2, 4, 9, 3, 5, 1]
Edge 0 begin training
Edge 7 begin training
Edge 8 begin training
Edge 6 begin training
Edge 2 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[0, 8, 7, 6, 2, 4, 9, 3, 5, 1]
aggregation_buffer:
[0, 8, 7, 6, 2, 4, 9, 3, 5, 1]
class-wise minimum distance tensor([74.4718, 78.6643, 77.5926, 74.7612, 76.3130, 74.7612, 74.4718, 71.5358,
        76.4469, 71.5358], device='cuda:0')
min_gap tensor(71.5358, device='cuda:0')
max_gap tensor(78.6643, device='cuda:0')
Server loss: 20.38852310180664
end Update
server_global_time: 32.409340888261795
only_train_time: 614.0600906834006

-------------Global Round number: 34-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9130
Averaged Test Accuracy (Prototype Model): 0.8425
Averaged Train Loss (Regular Model): 0.5144
Averaged Train Loss (Regular + Proto): 7.4580
Std Test Accuracy (Regular Model): 0.1652
Std Test Accuracy (Prototype Model): 0.3172
tobetrained:
[0, 8, 7, 6, 2, 4, 9, 3, 5, 1]
Edge 0 begin training
Edge 8 begin training
Edge 7 begin training
Edge 6 begin training
Edge 2 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([71.8532, 75.1518, 73.6157, 72.5326, 71.3716, 73.4458, 71.8532, 64.3574,
        71.6349, 64.3574], device='cuda:0')
min_gap tensor(64.3574, device='cuda:0')
max_gap tensor(75.1518, device='cuda:0')
Server loss: 23.196229934692383
end Update
server_global_time: 33.58692105859518
only_train_time: 632.4669655784965

-------------Global Round number: 35-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8860
Averaged Test Accuracy (Prototype Model): 0.8308
Averaged Train Loss (Regular Model): 0.5674
Averaged Train Loss (Regular + Proto): 8.8312
Std Test Accuracy (Regular Model): 0.2118
Std Test Accuracy (Prototype Model): 0.3221
tobetrained:
[0, 6, 8, 2, 7, 4, 9, 5, 3, 1]
Edge 0 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 7 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 2, 7, 6, 8, 4, 9, 5, 3, 1]
aggregation_buffer:
[0, 2, 7, 6, 8, 4, 9, 5, 3, 1]
class-wise minimum distance tensor([69.0392, 71.1664, 72.8657, 71.2097, 64.8341, 72.6201, 69.0392, 63.1853,
        68.3004, 63.1853], device='cuda:0')
min_gap tensor(63.1853, device='cuda:0')
max_gap tensor(72.8657, device='cuda:0')
Server loss: 27.908283233642578
end Update
server_global_time: 34.55063784122467
only_train_time: 650.7801301404834

-------------Global Round number: 36-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8809
Averaged Test Accuracy (Prototype Model): 0.8085
Averaged Train Loss (Regular Model): 2.3223
Averaged Train Loss (Regular + Proto): 13.8149
Std Test Accuracy (Regular Model): 0.2072
Std Test Accuracy (Prototype Model): 0.3520
tobetrained:
[0, 2, 7, 6, 8, 4, 9, 5, 3, 1]
Edge 0 begin training
Edge 2 begin training
Edge 7 begin training
Edge 6 begin training
Edge 8 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 3 begin training
Edge 1 begin training
readyList:
[0, 6, 2, 7, 8, 4, 9, 5, 1, 3]
aggregation_buffer:
[0, 6, 2, 7, 8, 4, 9, 5, 1, 3]
class-wise minimum distance tensor([68.7238, 70.7894, 73.4247, 70.8210, 67.1603, 72.6834, 68.7238, 63.4559,
        68.5551, 63.4559], device='cuda:0')
min_gap tensor(63.4559, device='cuda:0')
max_gap tensor(73.4247, device='cuda:0')
Server loss: 25.333921432495117
end Update
server_global_time: 35.52257987111807
only_train_time: 669.8650609105825

-------------Global Round number: 37-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8781
Averaged Test Accuracy (Prototype Model): 0.7896
Averaged Train Loss (Regular Model): 0.4929
Averaged Train Loss (Regular + Proto): 8.6430
Std Test Accuracy (Regular Model): 0.2156
Std Test Accuracy (Prototype Model): 0.3527
tobetrained:
[0, 6, 2, 7, 8, 4, 9, 5, 1, 3]
Edge 0 begin training
Edge 6 begin training
Edge 2 begin training
Edge 7 begin training
Edge 8 begin training
Edge 4 begin training
Edge 9 begin training
Edge 5 begin training
Edge 1 begin training
Edge 3 begin training
readyList:
[0, 8, 6, 2, 4, 9, 7, 3, 5, 1]
aggregation_buffer:
[0, 8, 6, 2, 4, 9, 7, 3, 5, 1]
class-wise minimum distance tensor([69.8862, 69.9619, 73.7554, 73.0237, 66.4269, 74.1264, 70.1770, 63.7905,
        69.8006, 63.7905], device='cuda:0')
min_gap tensor(63.7905, device='cuda:0')
max_gap tensor(74.1264, device='cuda:0')
Server loss: 27.945877075195312
end Update
server_global_time: 36.452916361391544
only_train_time: 688.4060527160764

-------------Global Round number: 38-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8622
Averaged Test Accuracy (Prototype Model): 0.8335
Averaged Train Loss (Regular Model): 0.4402
Averaged Train Loss (Regular + Proto): 8.5712
Std Test Accuracy (Regular Model): 0.2524
Std Test Accuracy (Prototype Model): 0.3056
tobetrained:
[0, 8, 6, 2, 4, 9, 7, 3, 5, 1]
Edge 0 begin training
Edge 8 begin training
Edge 6 begin training
Edge 2 begin training
Edge 4 begin training
Edge 9 begin training
Edge 7 begin training
Edge 3 begin training
Edge 5 begin training
Edge 1 begin training
readyList:
[0, 7, 6, 2, 8, 5, 9, 3, 4, 1]
aggregation_buffer:
[0, 7, 6, 2, 8, 5, 9, 3, 4, 1]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
end Update
server_global_time: 37.361323364079
only_train_time: 706.8444832488894

-------------Global Round number: 39-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8053
Averaged Test Accuracy (Prototype Model): 0.0982
Averaged Train Loss (Regular Model): nan
Averaged Train Loss (Regular + Proto): nan
Std Test Accuracy (Regular Model): 0.2813
Std Test Accuracy (Prototype Model): 0.1486
tobetrained:
[0, 7, 6, 2, 8, 5, 9, 3, 4, 1]
Edge 0 begin training
Edge 7 begin training
Edge 6 begin training
Edge 2 begin training
Edge 8 begin training
Edge 5 begin training
Edge 9 begin training
Edge 3 begin training
Edge 4 begin training
Edge 1 begin training
readyList:
[0, 6, 8, 2, 7, 4, 5, 9, 3, 1]
aggregation_buffer:
[0, 6, 8, 2, 7, 4, 5, 9, 3, 1]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
Number of samples: 316
Traceback (most recent call last):
  File "main.py", line 510, in <module>
    run(args)
  File "main.py", line 270, in run
    server.train()
  File "/root/autodl-tmp/SAE-FedProto-CEC/system/flcore/servers/servertgp.py", line 92, in train
    self.cloudUpdate()
  File "/root/autodl-tmp/SAE-FedProto-CEC/system/flcore/servers/servertgp.py", line 129, in cloudUpdate
    self.save_tsne_with_agg(
  File "/root/autodl-tmp/SAE-FedProto-CEC/system/flcore/servers/serverbase.py", line 626, in save_tsne_with_agg
    reduced_features = tsne.fit_transform(all_features)
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/utils/_set_output.py", line 157, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/base.py", line 1152, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py", line 1111, in fit_transform
    embedding = self._fit(X)
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py", line 841, in _fit
    X = self._validate_data(
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/base.py", line 605, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/utils/validation.py", line 957, in check_array
    _assert_all_finite(
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/utils/validation.py", line 122, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/root/miniconda3/lib/python3.8/site-packages/sklearn/utils/validation.py", line 171, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
TSNE does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
