==================================================
goal = gltest_umap
device = cuda
device_id = 0
dataset = Cifar10_dir_0.1_imbalance_40
jetson = 0
DVFS = 0
drawGMM = 0
num_classes = 10
model_family = HtFE8
batch_size = 256
num_workers = 0
local_learning_rate = 0.06
use_decay_scheduler = False
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 200
edge_epochs = 1
local_epochs = 5
algorithm = FedSAE
join_ratio = 1.0
edge_join_ratio = 1.0
random_join_ratio = False
num_clients = 40
num_edges = 10
prev = 0
times = 1
eval_gap = 1
save_folder_name = STATIC
auto_break = False
feature_dim = 512
vocab_size = 98635
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
optimizer = SGD
lamda = 1.0
weight_decay = 0
trans_delay_simulate = False
momentum = 0.8
agg_type = 0
buffersize = 10
gl_use_clients = 1
test_useglclassifier = 1
gamma = 1.0
extra_loss = 0
delta = 1
drawtsne = 1
drawround = 20
noise_dim = 512
generator_learning_rate = 0.0001
hidden_dim = 512
server_epochs = 100
alpha = 1.0
beta = 1.0
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
server_learning_rate = 0.01
margin_threthold = 100.0
generator_path = stylegan/stylegan-xl-models/imagenet64.pkl
stable_diffusion_prompt = a cat
server_batch_size = 100
gen_batch_size = 4
mu = 50.0
buffer_size = 10
==================================================
Random seed set as 42
FedAvgCNN(in_features=3, num_classes=args.num_classes, dim=1600)
torchvision.models.googlenet(pretrained=False, aux_logits=False, num_classes=args.num_classes)
mobilenet_v2(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet18(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet34(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet50(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet101(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet152(pretrained=False, num_classes=args.num_classes)
temp/Cifar10_dir_0.1_imbalance_40/NE_10/featuredim_512/FedSAE/SGD/lr_0.06/wd_0/momentum_0.8/lbs_256/lamda_1.0/localepoch_5/buffer_10/gamma_1.0_usegltest_1/
id 0
label_counts: defaultdict(<class 'int'>, {3: 759, 1: 17, 8: 61, 9: 4})
id 1
label_counts: defaultdict(<class 'int'>, {6: 422, 0: 845, 4: 86, 2: 32})
id 2
label_counts: defaultdict(<class 'int'>, {5: 677, 0: 49, 2: 1})
id 3
label_counts: defaultdict(<class 'int'>, {6: 299, 0: 656, 3: 122, 5: 29, 1: 205, 2: 3})
id 4
label_counts: defaultdict(<class 'int'>, {9: 1176, 0: 484, 6: 38, 5: 15, 4: 18})
id 5
label_counts: defaultdict(<class 'int'>, {9: 1172, 8: 161, 0: 169, 4: 10, 5: 2, 3: 1})
id 6
label_counts: defaultdict(<class 'int'>, {3: 908, 6: 131, 9: 14, 8: 1, 1: 44, 2: 16})
id 7
label_counts: defaultdict(<class 'int'>, {6: 1628, 0: 297, 4: 77, 2: 106, 1: 51})
id 8
label_counts: defaultdict(<class 'int'>, {0: 356, 5: 29, 8: 703, 7: 342, 4: 1})
id 9
label_counts: defaultdict(<class 'int'>, {2: 627, 9: 327, 5: 5, 8: 53, 1: 2, 6: 6})
id 10
label_counts: defaultdict(<class 'int'>, {1: 1087, 0: 90})
id 11
label_counts: defaultdict(<class 'int'>, {5: 569, 4: 420, 7: 357, 1: 105, 0: 1})
id 12
label_counts: defaultdict(<class 'int'>, {4: 101, 5: 202, 8: 9, 3: 2, 9: 4})
id 13
label_counts: defaultdict(<class 'int'>, {5: 717, 1: 131, 4: 399, 2: 358, 3: 1, 0: 4})
id 14
label_counts: defaultdict(<class 'int'>, {7: 452, 9: 5})
id 15
label_counts: defaultdict(<class 'int'>, {0: 91, 9: 427, 7: 127, 2: 9, 6: 9, 1: 3, 4: 15})
id 16
label_counts: defaultdict(<class 'int'>, {1: 1999})
id 17
label_counts: defaultdict(<class 'int'>, {2: 1404, 1: 3})
id 18
label_counts: defaultdict(<class 'int'>, {8: 1604, 7: 54, 6: 1})
id 19
label_counts: defaultdict(<class 'int'>, {3: 177, 4: 466, 1: 8, 8: 28, 2: 2})
id 20
label_counts: defaultdict(<class 'int'>, {7: 1892, 0: 134, 5: 294, 2: 105, 4: 23, 6: 15})
id 21
label_counts: defaultdict(<class 'int'>, {5: 164, 4: 24, 6: 21, 2: 117, 8: 2, 9: 10, 1: 1})
id 22
label_counts: defaultdict(<class 'int'>, {8: 76, 4: 121, 6: 132, 9: 4})
id 23
label_counts: defaultdict(<class 'int'>, {9: 945, 7: 320, 1: 113, 4: 9, 3: 25, 2: 9, 8: 2, 6: 29})
id 24
label_counts: defaultdict(<class 'int'>, {4: 1435, 0: 164, 2: 186, 1: 31})
id 25
label_counts: defaultdict(<class 'int'>, {8: 649, 4: 23, 7: 134, 9: 316, 2: 127, 6: 8})
id 26
label_counts: defaultdict(<class 'int'>, {2: 407, 6: 1135, 3: 166, 1: 95, 4: 61, 5: 4})
id 27
label_counts: defaultdict(<class 'int'>, {3: 388, 4: 275, 9: 26, 1: 1})
id 28
label_counts: defaultdict(<class 'int'>, {7: 203, 8: 388, 0: 4, 3: 28, 2: 31})
id 29
label_counts: defaultdict(<class 'int'>, {3: 76, 7: 48, 1: 132, 0: 21, 2: 20})
id 30
label_counts: defaultdict(<class 'int'>, {0: 337, 7: 209, 9: 72, 2: 17, 5: 1})
id 31
label_counts: defaultdict(<class 'int'>, {2: 822, 7: 94, 8: 241, 1: 16, 4: 7})
id 32
label_counts: defaultdict(<class 'int'>, {8: 471, 1: 289, 2: 124, 0: 77, 5: 1, 3: 1})
id 33
label_counts: defaultdict(<class 'int'>, {3: 811, 0: 326})
id 34
label_counts: defaultdict(<class 'int'>, {5: 1452, 4: 71, 2: 5, 1: 3})
id 35
label_counts: defaultdict(<class 'int'>, {6: 588, 7: 116, 0: 8, 8: 1})
id 36
label_counts: defaultdict(<class 'int'>, {0: 150, 1: 126, 8: 44, 5: 4, 4: 4})
id 37
label_counts: defaultdict(<class 'int'>, {3: 1025, 0: 51, 5: 354, 4: 1})
id 38
label_counts: defaultdict(<class 'int'>, {0: 237, 4: 218})
id 39
label_counts: defaultdict(<class 'int'>, {4: 647, 7: 97, 3: 11, 1: 6, 2: 1, 5: 1, 0: 1, 8: 1})

Join ratio / total clients: 1.0 / 40
Finished creating server and clients.
X shape: (281, 512), Y shape: (281,)
X_true shape: (269, 512), Y_true shape: (269,)
X shape: (462, 512), Y shape: (462,)
X_true shape: (389, 512), Y_true shape: (389,)
X shape: (243, 512), Y shape: (243,)
X_true shape: (234, 512), Y_true shape: (234,)
X shape: (438, 512), Y shape: (438,)
X_true shape: (332, 512), Y_true shape: (332,)
X shape: (577, 512), Y shape: (577,)
X_true shape: (486, 512), Y_true shape: (486,)
X shape: (505, 512), Y shape: (505,)
X_true shape: (425, 512), Y_true shape: (425,)
X shape: (372, 512), Y shape: (372,)
X_true shape: (302, 512), Y_true shape: (302,)
X shape: (720, 512), Y shape: (720,)
X_true shape: (607, 512), Y_true shape: (607,)
X shape: (478, 512), Y shape: (478,)
X_true shape: (401, 512), Y_true shape: (401,)
X shape: (340, 512), Y shape: (340,)
X_true shape: (284, 512), Y_true shape: (284,)
X shape: (393, 512), Y shape: (393,)
X_true shape: (370, 512), Y_true shape: (370,)
X shape: (484, 512), Y shape: (484,)
X_true shape: (317, 512), Y_true shape: (317,)
X shape: (107, 512), Y shape: (107,)
X_true shape: (80, 512), Y_true shape: (80,)
X shape: (537, 512), Y shape: (537,)
X_true shape: (328, 512), Y_true shape: (328,)
X shape: (153, 512), Y shape: (153,)
X_true shape: (152, 512), Y_true shape: (152,)
X shape: (228, 512), Y shape: (228,)
X_true shape: (158, 512), Y_true shape: (158,)
X shape: (667, 512), Y shape: (667,)
X_true shape: (667, 512), Y_true shape: (667,)
X shape: (470, 512), Y shape: (470,)
X_true shape: (468, 512), Y_true shape: (468,)
X shape: (553, 512), Y shape: (553,)
X_true shape: (540, 512), Y_true shape: (540,)
X shape: (228, 512), Y shape: (228,)
X_true shape: (182, 512), Y_true shape: (182,)
X shape: (822, 512), Y shape: (822,)
X_true shape: (667, 512), Y_true shape: (667,)
X shape: (113, 512), Y shape: (113,)
X_true shape: (54, 512), Y_true shape: (54,)
X shape: (111, 512), Y shape: (111,)
X_true shape: (54, 512), Y_true shape: (54,)
X shape: (485, 512), Y shape: (485,)
X_true shape: (365, 512), Y_true shape: (365,)
X shape: (606, 512), Y shape: (606,)
X_true shape: (505, 512), Y_true shape: (505,)
X shape: (419, 512), Y shape: (419,)
X_true shape: (321, 512), Y_true shape: (321,)
X shape: (623, 512), Y shape: (623,)
X_true shape: (429, 512), Y_true shape: (429,)
X shape: (230, 512), Y shape: (230,)
X_true shape: (176, 512), Y_true shape: (176,)
X shape: (218, 512), Y shape: (218,)
X_true shape: (175, 512), Y_true shape: (175,)
X shape: (100, 512), Y shape: (100,)
X_true shape: (50, 512), Y_true shape: (50,)
X shape: (212, 512), Y shape: (212,)
X_true shape: (158, 512), Y_true shape: (158,)
X shape: (394, 512), Y shape: (394,)
X_true shape: (309, 512), Y_true shape: (309,)
X shape: (322, 512), Y shape: (322,)
X_true shape: (264, 512), Y_true shape: (264,)
X shape: (379, 512), Y shape: (379,)
X_true shape: (343, 512), Y_true shape: (343,)
X shape: (511, 512), Y shape: (511,)
X_true shape: (485, 512), Y_true shape: (485,)
X shape: (238, 512), Y shape: (238,)
X_true shape: (206, 512), Y_true shape: (206,)
X shape: (110, 512), Y shape: (110,)
X_true shape: (78, 512), Y_true shape: (78,)
X shape: (478, 512), Y shape: (478,)
X_true shape: (351, 512), Y_true shape: (351,)
X shape: (152, 512), Y shape: (152,)
X_true shape: (126, 512), Y_true shape: (126,)
X shape: (255, 512), Y shape: (255,)
X_true shape: (216, 512), Y_true shape: (216,)
Averaged Test Accuracy (Regular Model): 0.8208
Averaged Test Accuracy (Prototype Model): 0.8206
Averaged Train Loss (Regular Model): 0.0000
Averaged Train Loss (Regular + Proto): 0.0000
Std Test Accuracy (Regular Model): 0.1292
Std Test Accuracy (Prototype Model): 0.1285
umap_features map
Explained variance ratio: [0.18000764 0.15712492]
