==================================================
goal = test
device = cuda
device_id = 0
dataset = Cifar10_dir_0.3_imbalance_40
num_classes = 10
model_family = HCNNs8
batch_size = 256
local_learning_rate = 0.06
use_decay_scheduler = False
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 200
edge_epochs = 1
local_epochs = 5
algorithm = FedGen
join_ratio = 1.0
random_join_ratio = False
num_clients = 40
num_edges = 10
prev = 0
times = 1
eval_gap = 1
save_folder_name = temp
auto_break = False
feature_dim = 512
vocab_size = 98635
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
optimizer = SGD
lamda = 1
weight_decay = 0
trans_delay_simulate = False
momentum = 0.8
agg_type = 0
buffersize = 10
mixclassifier = 0
gl_use_clients = 1
test_useglclassifier = 1
tgpaddmse = 0
addmse = 0
gamma = 1
addTGP = 0
SAEbeta = 0
drawtsne = 1
drawround = 20
noise_dim = 512
generator_learning_rate = 0.0001
hidden_dim = 512
server_epochs = 100
alpha = 1.0
beta = 1.0
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
server_learning_rate = 0.01
margin_threthold = 100.0
generator_path = stylegan/stylegan-xl-models/imagenet64.pkl
stable_diffusion_prompt = a cat
server_batch_size = 100
gen_batch_size = 4
mu = 50.0
==================================================
Random seed set as 42

============= Running time: 0th =============
Creating server and clients ...
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 0
label_counts: defaultdict(<class 'int'>, {3: 372, 7: 319, 1: 44, 4: 165, 6: 80, 8: 38, 5: 2, 9: 2, 2: 1, 0: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 1
label_counts: defaultdict(<class 'int'>, {2: 738, 4: 280, 0: 4, 3: 2})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 2
label_counts: defaultdict(<class 'int'>, {5: 83, 4: 131, 9: 50, 2: 61, 8: 100, 7: 35, 6: 23, 0: 20, 1: 8, 3: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 3
label_counts: defaultdict(<class 'int'>, {7: 412, 5: 386, 8: 32, 9: 346, 2: 15, 4: 86, 0: 3})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 4
label_counts: defaultdict(<class 'int'>, {2: 518, 5: 208, 7: 29, 8: 154, 3: 78, 0: 16, 1: 3, 4: 18})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 5
label_counts: defaultdict(<class 'int'>, {0: 709, 5: 488, 3: 28, 1: 55})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 6
label_counts: defaultdict(<class 'int'>, {3: 354, 6: 144, 1: 14, 0: 86, 2: 1, 8: 125, 9: 42, 4: 2})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 7
label_counts: defaultdict(<class 'int'>, {4: 319, 9: 1380, 5: 27, 0: 68, 3: 104, 7: 73, 1: 6, 2: 70, 6: 1})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 8
label_counts: defaultdict(<class 'int'>, {4: 360, 8: 139, 2: 98, 7: 80, 3: 63, 9: 8, 1: 12, 0: 2, 6: 4, 5: 2})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 9
label_counts: defaultdict(<class 'int'>, {4: 78, 7: 259, 9: 25, 1: 56, 5: 7, 2: 67, 0: 7, 3: 13})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 10
label_counts: defaultdict(<class 'int'>, {0: 793, 8: 849, 4: 103, 1: 16, 3: 10, 2: 10, 5: 5, 6: 6})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 11
label_counts: defaultdict(<class 'int'>, {2: 164, 1: 145, 9: 32, 8: 150, 3: 14, 5: 2, 7: 4, 4: 1})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 12
label_counts: defaultdict(<class 'int'>, {4: 310, 6: 619, 1: 44, 0: 45, 2: 2, 3: 3, 5: 1})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 13
label_counts: defaultdict(<class 'int'>, {0: 447, 2: 259, 6: 411, 1: 66, 3: 88, 4: 9})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 14
label_counts: defaultdict(<class 'int'>, {5: 673, 4: 96, 1: 465, 3: 16, 0: 29, 2: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 15
label_counts: defaultdict(<class 'int'>, {2: 824, 4: 954, 0: 73, 1: 152, 3: 45})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 16
label_counts: defaultdict(<class 'int'>, {8: 60, 3: 357, 6: 93, 0: 8, 5: 59, 9: 155, 4: 34, 1: 2})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 17
label_counts: defaultdict(<class 'int'>, {6: 42, 7: 964, 2: 128, 4: 48, 3: 83, 5: 7, 0: 8})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 18
label_counts: defaultdict(<class 'int'>, {8: 49, 3: 46, 0: 238, 5: 167, 1: 181, 7: 7, 4: 76, 2: 1, 6: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 19
label_counts: defaultdict(<class 'int'>, {1: 420, 9: 80, 2: 44, 5: 51, 8: 141, 6: 16, 7: 9, 3: 7})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 20
label_counts: defaultdict(<class 'int'>, {8: 293, 3: 296, 4: 35, 0: 174, 6: 188, 2: 15, 5: 4, 7: 19})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 21
label_counts: defaultdict(<class 'int'>, {5: 40, 2: 66, 3: 90, 1: 257, 0: 413, 4: 123, 8: 31, 9: 2, 6: 2})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 22
label_counts: defaultdict(<class 'int'>, {8: 358, 9: 96, 3: 74, 1: 58, 6: 119, 5: 43, 7: 19, 4: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 23
label_counts: defaultdict(<class 'int'>, {3: 310, 2: 400, 0: 138, 1: 176})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 24
label_counts: defaultdict(<class 'int'>, {7: 394, 2: 21, 8: 65, 6: 225, 1: 147, 4: 108, 9: 42, 0: 4, 3: 18})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 25
label_counts: defaultdict(<class 'int'>, {5: 182, 1: 328, 7: 303, 4: 92, 6: 75, 3: 28, 2: 11, 8: 2, 0: 2, 9: 1})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 26
label_counts: defaultdict(<class 'int'>, {0: 251, 9: 796, 8: 52, 5: 56, 3: 105, 4: 3, 1: 15, 6: 2})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 27
label_counts: defaultdict(<class 'int'>, {6: 286, 4: 24, 9: 39, 3: 11, 1: 22, 2: 15, 5: 115})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 28
label_counts: defaultdict(<class 'int'>, {5: 437, 1: 125, 4: 60, 8: 28, 0: 77, 6: 10, 7: 28, 2: 2, 3: 1})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 29
label_counts: defaultdict(<class 'int'>, {7: 807, 5: 324, 1: 39, 6: 43, 3: 48, 4: 10, 2: 9})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 30
label_counts: defaultdict(<class 'int'>, {6: 479, 5: 72, 3: 625, 0: 80, 4: 7, 2: 16, 1: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 31
label_counts: defaultdict(<class 'int'>, {1: 83, 2: 10, 5: 33, 0: 137, 9: 126, 7: 35, 4: 39, 6: 44, 3: 5})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 32
label_counts: defaultdict(<class 'int'>, {5: 290, 9: 48, 2: 53, 0: 28, 8: 71, 1: 7, 6: 11, 3: 3, 7: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 33
label_counts: defaultdict(<class 'int'>, {0: 9, 4: 70, 1: 607, 6: 212, 8: 60, 5: 28, 7: 36, 2: 2})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 34
label_counts: defaultdict(<class 'int'>, {8: 749, 3: 116, 1: 187, 4: 26, 7: 24, 6: 173, 2: 5})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 35
label_counts: defaultdict(<class 'int'>, {0: 51, 9: 298, 7: 118, 3: 52, 2: 213, 6: 17, 8: 8, 1: 6, 4: 5})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 36
label_counts: defaultdict(<class 'int'>, {9: 68, 8: 139, 1: 61, 4: 92, 5: 129, 2: 15, 7: 7, 0: 1})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 37
label_counts: defaultdict(<class 'int'>, {6: 397, 1: 132, 0: 93, 4: 61, 7: 8, 3: 42, 9: 16, 2: 9, 5: 10})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 38
label_counts: defaultdict(<class 'int'>, {6: 122, 7: 116, 3: 84, 0: 5, 5: 25, 1: 21, 8: 22, 2: 101, 9: 16})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 39
label_counts: defaultdict(<class 'int'>, {9: 291, 3: 321, 4: 200, 8: 200, 1: 1, 7: 4, 0: 3, 5: 4})

Join ratio / total clients: 1.0 / 40
Finished creating server and clients.
Traceback (most recent call last):
  File "main.py", line 510, in <module>
    run(args)
  File "main.py", line 270, in run
    server.train()
  File "/root/autodl-tmp/SAE-FedProto-CEC/system/flcore/servers/servergen.py", line 73, in train
    client.train()
  File "/root/autodl-tmp/SAE-FedProto-CEC/system/flcore/clients/clientgen.py", line 61, in train
    rep = model.base(x)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/autodl-tmp/SAE-FedProto-CEC/system/flcore/trainmodel/models.py", line 166, in forward
    out = self.conv(x)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 399, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/root/miniconda3/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 395, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [32, 1, 5, 5], expected input[256, 3, 32, 32] to have 1 channels, but got 3 channels instead
