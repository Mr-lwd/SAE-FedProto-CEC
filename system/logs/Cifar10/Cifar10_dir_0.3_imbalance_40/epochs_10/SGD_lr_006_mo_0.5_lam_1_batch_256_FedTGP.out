==================================================
goal = test
device = cuda
device_id = 0
dataset = Cifar10_dir_0.3_imbalance_40
num_classes = 10
model_family = HtFE8
batch_size = 256
local_learning_rate = 0.06
use_decay_scheduler = False
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 200
edge_epochs = 1
local_epochs = 10
algorithm = FedTGP
join_ratio = 1.0
random_join_ratio = False
num_clients = 40
num_edges = 10
prev = 0
times = 1
eval_gap = 1
save_folder_name = temp
auto_break = False
feature_dim = 512
vocab_size = 98635
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
lamda = 1.0
trans_delay_simulate = False
momentum = 0.5
agg_type = 0
buffersize = 10
mixclassifier = 0
gl_use_clients = 1
test_useglclassifier = 1
tgpaddmse = 0
addmse = 0
gamma = 1
addTGP = 0
SAEbeta = 0
drawtsne = 1
drawround = 10
noise_dim = 512
generator_learning_rate = 0.005
hidden_dim = 512
server_epochs = 100
alpha = 1.0
beta = 1.0
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
server_learning_rate = 0.01
margin_threthold = 100.0
generator_path = stylegan/stylegan-xl-models/imagenet64.pkl
stable_diffusion_prompt = a cat
server_batch_size = 100
gen_batch_size = 4
mu = 50.0
==================================================
Random seed set as 42

============= Running time: 0th =============
Creating server and clients ...
FedAvgCNN(in_features=3, num_classes=args.num_classes, dim=1600)
torchvision.models.googlenet(pretrained=False, aux_logits=False, num_classes=args.num_classes)
mobilenet_v2(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet18(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet34(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet50(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet101(pretrained=False, num_classes=args.num_classes)
torchvision.models.resnet152(pretrained=False, num_classes=args.num_classes)
FedAvgCNN(in_features=3, num_classes=args.num_classes, dim=1600) model chosen!
id 0
label_counts: defaultdict(<class 'int'>, {6: 87, 7: 347, 3: 400, 1: 47, 4: 179, 8: 41, 2: 1, 5: 2, 9: 2, 0: 2})
torchvision.models.googlenet(pretrained=False, aux_logits=False, num_classes=args.num_classes) model chosen!
id 1
label_counts: defaultdict(<class 'int'>, {2: 855, 4: 327, 0: 5, 3: 3})
mobilenet_v2(pretrained=False, num_classes=args.num_classes) model chosen!
id 2
label_counts: defaultdict(<class 'int'>, {5: 141, 9: 71, 4: 177, 8: 162, 6: 36, 2: 95, 1: 9, 7: 49, 0: 23, 3: 2})
torchvision.models.resnet18(pretrained=False, num_classes=args.num_classes) model chosen!
id 3
label_counts: defaultdict(<class 'int'>, {9: 347, 4: 88, 5: 394, 8: 32, 7: 415, 2: 15, 0: 3})
torchvision.models.resnet34(pretrained=False, num_classes=args.num_classes) model chosen!
id 4
label_counts: defaultdict(<class 'int'>, {8: 172, 2: 591, 3: 83, 7: 30, 5: 234, 1: 3, 4: 18, 0: 18})
torchvision.models.resnet50(pretrained=False, num_classes=args.num_classes) model chosen!
id 5
label_counts: defaultdict(<class 'int'>, {0: 841, 5: 565, 1: 70, 3: 35})
torchvision.models.resnet101(pretrained=False, num_classes=args.num_classes) model chosen!
id 6
label_counts: defaultdict(<class 'int'>, {3: 381, 6: 154, 8: 143, 9: 43, 0: 93, 1: 15, 2: 1, 4: 2, 7: 1})
torchvision.models.resnet152(pretrained=False, num_classes=args.num_classes) model chosen!
id 7
label_counts: defaultdict(<class 'int'>, {9: 1519, 4: 349, 3: 115, 2: 76, 0: 78, 7: 79, 5: 29, 1: 6, 6: 1})
FedAvgCNN(in_features=3, num_classes=args.num_classes, dim=1600) model chosen!
id 8
label_counts: defaultdict(<class 'int'>, {4: 425, 1: 15, 3: 83, 8: 161, 0: 4, 2: 115, 7: 92, 9: 10, 6: 5, 5: 2})
torchvision.models.googlenet(pretrained=False, aux_logits=False, num_classes=args.num_classes) model chosen!
id 9
label_counts: defaultdict(<class 'int'>, {7: 286, 1: 64, 4: 95, 0: 7, 2: 80, 3: 14, 9: 28, 5: 7})
mobilenet_v2(pretrained=False, num_classes=args.num_classes) model chosen!
id 10
label_counts: defaultdict(<class 'int'>, {8: 906, 0: 830, 4: 108, 1: 17, 3: 11, 2: 10, 6: 6, 5: 5})
torchvision.models.resnet18(pretrained=False, num_classes=args.num_classes) model chosen!
id 11
label_counts: defaultdict(<class 'int'>, {8: 208, 7: 8, 1: 227, 2: 238, 3: 16, 9: 48, 5: 2, 6: 2, 4: 1})
torchvision.models.resnet34(pretrained=False, num_classes=args.num_classes) model chosen!
id 12
label_counts: defaultdict(<class 'int'>, {4: 354, 6: 681, 1: 47, 0: 50, 3: 4, 5: 1, 2: 2})
torchvision.models.resnet50(pretrained=False, num_classes=args.num_classes) model chosen!
id 13
label_counts: defaultdict(<class 'int'>, {0: 464, 6: 426, 3: 90, 2: 271, 1: 67, 4: 10})
torchvision.models.resnet101(pretrained=False, num_classes=args.num_classes) model chosen!
id 14
label_counts: defaultdict(<class 'int'>, {5: 746, 1: 509, 4: 104, 3: 17, 0: 30, 2: 1})
torchvision.models.resnet152(pretrained=False, num_classes=args.num_classes) model chosen!
id 15
label_counts: defaultdict(<class 'int'>, {4: 973, 2: 843, 1: 155, 0: 75, 3: 45})
FedAvgCNN(in_features=3, num_classes=args.num_classes, dim=1600) model chosen!
id 16
label_counts: defaultdict(<class 'int'>, {6: 120, 1: 2, 3: 448, 0: 8, 8: 77, 9: 202, 4: 43, 5: 71})
torchvision.models.googlenet(pretrained=False, aux_logits=False, num_classes=args.num_classes) model chosen!
id 17
label_counts: defaultdict(<class 'int'>, {7: 978, 0: 8, 6: 42, 3: 84, 2: 130, 5: 9, 4: 48})
mobilenet_v2(pretrained=False, num_classes=args.num_classes) model chosen!
id 18
label_counts: defaultdict(<class 'int'>, {0: 260, 5: 179, 1: 196, 4: 82, 3: 53, 7: 8, 8: 51, 6: 3, 2: 2})
torchvision.models.resnet18(pretrained=False, num_classes=args.num_classes) model chosen!
id 19
label_counts: defaultdict(<class 'int'>, {1: 456, 5: 56, 9: 86, 8: 150, 2: 46, 6: 20, 7: 10, 3: 7})
torchvision.models.resnet34(pretrained=False, num_classes=args.num_classes) model chosen!
id 20
label_counts: defaultdict(<class 'int'>, {3: 362, 0: 218, 4: 48, 8: 358, 7: 24, 6: 242, 2: 17, 5: 6})
torchvision.models.resnet50(pretrained=False, num_classes=args.num_classes) model chosen!
id 21
label_counts: defaultdict(<class 'int'>, {1: 276, 0: 436, 5: 44, 4: 131, 2: 72, 3: 93, 8: 33, 9: 2, 6: 2})
torchvision.models.resnet101(pretrained=False, num_classes=args.num_classes) model chosen!
id 22
label_counts: defaultdict(<class 'int'>, {3: 97, 6: 159, 8: 459, 9: 131, 5: 64, 1: 82, 7: 22, 4: 2, 2: 1})
torchvision.models.resnet152(pretrained=False, num_classes=args.num_classes) model chosen!
id 23
label_counts: defaultdict(<class 'int'>, {2: 510, 3: 373, 1: 205, 0: 170})
FedAvgCNN(in_features=3, num_classes=args.num_classes, dim=1600) model chosen!
id 24
label_counts: defaultdict(<class 'int'>, {4: 111, 7: 407, 6: 231, 2: 21, 1: 151, 8: 68, 3: 19, 9: 44, 0: 4})
torchvision.models.googlenet(pretrained=False, aux_logits=False, num_classes=args.num_classes) model chosen!
id 25
label_counts: defaultdict(<class 'int'>, {7: 336, 4: 100, 1: 353, 5: 197, 6: 83, 3: 29, 2: 11, 9: 2, 8: 3, 0: 2})
mobilenet_v2(pretrained=False, num_classes=args.num_classes) model chosen!
id 26
label_counts: defaultdict(<class 'int'>, {9: 885, 0: 276, 3: 116, 5: 59, 8: 57, 1: 18, 6: 2, 4: 3})
torchvision.models.resnet18(pretrained=False, num_classes=args.num_classes) model chosen!
id 27
label_counts: defaultdict(<class 'int'>, {6: 360, 5: 140, 1: 24, 3: 12, 4: 28, 9: 54, 2: 15})
torchvision.models.resnet34(pretrained=False, num_classes=args.num_classes) model chosen!
id 28
label_counts: defaultdict(<class 'int'>, {8: 31, 5: 486, 1: 148, 0: 87, 4: 71, 7: 29, 6: 12, 2: 2, 3: 1})
torchvision.models.resnet50(pretrained=False, num_classes=args.num_classes) model chosen!
id 29
label_counts: defaultdict(<class 'int'>, {5: 380, 7: 932, 1: 46, 6: 48, 4: 10, 3: 54, 2: 10})
torchvision.models.resnet101(pretrained=False, num_classes=args.num_classes) model chosen!
id 30
label_counts: defaultdict(<class 'int'>, {3: 724, 2: 19, 6: 555, 0: 95, 5: 89, 4: 8, 1: 1})
torchvision.models.resnet152(pretrained=False, num_classes=args.num_classes) model chosen!
id 31
label_counts: defaultdict(<class 'int'>, {6: 65, 0: 185, 9: 201, 1: 130, 7: 52, 3: 7, 4: 61, 2: 12, 5: 41})
FedAvgCNN(in_features=3, num_classes=args.num_classes, dim=1600) model chosen!
id 32
label_counts: defaultdict(<class 'int'>, {0: 33, 5: 339, 8: 81, 9: 53, 2: 65, 1: 9, 3: 3, 7: 1, 6: 11})
torchvision.models.googlenet(pretrained=False, aux_logits=False, num_classes=args.num_classes) model chosen!
id 33
label_counts: defaultdict(<class 'int'>, {6: 249, 1: 688, 8: 63, 4: 82, 5: 32, 7: 39, 0: 10, 2: 2})
mobilenet_v2(pretrained=False, num_classes=args.num_classes) model chosen!
id 34
label_counts: defaultdict(<class 'int'>, {8: 782, 6: 180, 4: 26, 1: 196, 3: 124, 7: 25, 2: 5})
torchvision.models.resnet18(pretrained=False, num_classes=args.num_classes) model chosen!
id 35
label_counts: defaultdict(<class 'int'>, {0: 69, 2: 255, 9: 362, 3: 64, 6: 20, 7: 151, 8: 12, 1: 7, 4: 8})
torchvision.models.resnet34(pretrained=False, num_classes=args.num_classes) model chosen!
id 36
label_counts: defaultdict(<class 'int'>, {5: 152, 8: 159, 1: 70, 9: 83, 4: 109, 2: 15, 7: 10, 0: 1})
torchvision.models.resnet50(pretrained=False, num_classes=args.num_classes) model chosen!
id 37
label_counts: defaultdict(<class 'int'>, {1: 171, 0: 116, 4: 82, 6: 519, 9: 20, 3: 58, 7: 10, 5: 16, 2: 10})
torchvision.models.resnet101(pretrained=False, num_classes=args.num_classes) model chosen!
id 38
label_counts: defaultdict(<class 'int'>, {2: 125, 7: 141, 6: 156, 5: 29, 8: 27, 3: 111, 1: 29, 9: 20, 0: 6})
torchvision.models.resnet152(pretrained=False, num_classes=args.num_classes) model chosen!
id 39
label_counts: defaultdict(<class 'int'>, {3: 345, 8: 216, 9: 312, 4: 217, 0: 3, 5: 5, 7: 4, 2: 1, 1: 1})

Join ratio / total clients: 1.0 / 40
Finished creating server and clients.
Trainable_prototypes(
  (embedings): Embedding(10, 512)
  (middle): Sequential(
    (0): Sequential(
      (0): Linear(in_features=512, out_features=512, bias=True)
      (1): ReLU()
    )
  )
  (fc): Linear(in_features=512, out_features=512, bias=True)
)
tobetrained:
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
Edge 9 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 8 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 7 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 6 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 5 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 4 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 3 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 2 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 1 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 0 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([1.2787, 1.2787, 1.3004, 1.3004, 1.4572, 1.4485, 1.4469, 1.5366, 1.7541,
        1.7215], device='cuda:0')
min_gap tensor(1.2787, device='cuda:0')
max_gap tensor(1.7541, device='cuda:0')
Server loss: 3.791020393371582
Number of samples: 326
end Update
server_global_time: 15.808984075672925
only_train_time: 150.24547580257058

-------------Global Round number: 0-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.5800
Averaged Test Accuracy (Prototype Model): 0.2157
Averaged Train Loss (Regular Model): 0.7587
Averaged Train Loss (Regular + Proto): 0.7587
Std Test Accuracy (Regular Model): 0.1293
Std Test Accuracy (Prototype Model): 0.1532
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([1.9015, 1.9789, 1.5579, 1.6913, 1.5579, 1.6761, 1.8735, 1.7447, 2.0085,
        2.0966], device='cuda:0')
min_gap tensor(1.5579, device='cuda:0')
max_gap tensor(2.0966, device='cuda:0')
Server loss: 3.5067954063415527
end Update
server_global_time: 32.753253317438066
only_train_time: 308.9847453618422

-------------Global Round number: 1-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6133
Averaged Test Accuracy (Prototype Model): 0.5048
Averaged Train Loss (Regular Model): 0.3792
Averaged Train Loss (Regular + Proto): 0.6834
Std Test Accuracy (Regular Model): 0.1170
Std Test Accuracy (Prototype Model): 0.1596
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 2, 8, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 2, 8, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([2.9161, 3.1279, 2.3406, 2.7592, 2.3406, 2.7130, 2.6976, 2.7548, 3.0971,
        3.2773], device='cuda:0')
min_gap tensor(2.3406, device='cuda:0')
max_gap tensor(3.2773, device='cuda:0')
Server loss: 3.1545119285583496
end Update
server_global_time: 49.13395569100976
only_train_time: 467.4735574349761

-------------Global Round number: 2-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6316
Averaged Test Accuracy (Prototype Model): 0.5897
Averaged Train Loss (Regular Model): 0.2778
Averaged Train Loss (Regular + Proto): 0.5016
Std Test Accuracy (Regular Model): 0.0987
Std Test Accuracy (Prototype Model): 0.0991
tobetrained:
[0, 2, 8, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 2 begin training
Edge 8 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 2, 8, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 2, 8, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([4.6187, 5.0118, 4.0959, 4.4744, 4.0959, 4.6187, 4.3651, 4.5722, 5.0488,
        5.0118], device='cuda:0')
min_gap tensor(4.0959, device='cuda:0')
max_gap tensor(5.0488, device='cuda:0')
Server loss: 4.1910200119018555
end Update
server_global_time: 65.51821085810661
only_train_time: 626.644898683764

-------------Global Round number: 3-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6326
Averaged Test Accuracy (Prototype Model): 0.6132
Averaged Train Loss (Regular Model): 0.2154
Averaged Train Loss (Regular + Proto): 0.4312
Std Test Accuracy (Regular Model): 0.1068
Std Test Accuracy (Prototype Model): 0.1008
tobetrained:
[0, 2, 8, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 2 begin training
Edge 8 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 7, 3]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 7, 3]
class-wise minimum distance tensor([6.1187, 7.1911, 5.7329, 6.3448, 5.7329, 6.3816, 5.7800, 6.5008, 7.1103,
        7.1911], device='cuda:0')
min_gap tensor(5.7329, device='cuda:0')
max_gap tensor(7.1911, device='cuda:0')
Server loss: 4.338893413543701
end Update
server_global_time: 82.04644541069865
only_train_time: 786.249862993136

-------------Global Round number: 4-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6374
Averaged Test Accuracy (Prototype Model): 0.6168
Averaged Train Loss (Regular Model): 0.1591
Averaged Train Loss (Regular + Proto): 0.3976
Std Test Accuracy (Regular Model): 0.1003
Std Test Accuracy (Prototype Model): 0.0927
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 7, 3]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 7 begin training
Edge 3 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([7.6746, 8.8748, 7.2180, 7.9674, 7.4257, 7.9487, 7.2180, 7.8466, 8.7542,
        9.1030], device='cuda:0')
min_gap tensor(7.2180, device='cuda:0')
max_gap tensor(9.1030, device='cuda:0')
Server loss: 4.429200172424316
end Update
server_global_time: 98.97488720156252
only_train_time: 946.1209203684703

-------------Global Round number: 5-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6420
Averaged Test Accuracy (Prototype Model): 0.6218
Averaged Train Loss (Regular Model): 0.1296
Averaged Train Loss (Regular + Proto): 0.3985
Std Test Accuracy (Regular Model): 0.0984
Std Test Accuracy (Prototype Model): 0.0950
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([ 8.7109,  9.6368,  8.1481,  8.8560,  8.2490,  8.5799,  8.1481,  8.7572,
        10.4063, 10.2905], device='cuda:0')
min_gap tensor(8.1481, device='cuda:0')
max_gap tensor(10.4063, device='cuda:0')
Server loss: 7.238080024719238
end Update
server_global_time: 115.63041386473924
only_train_time: 1106.2131896326318

-------------Global Round number: 6-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6388
Averaged Test Accuracy (Prototype Model): 0.6222
Averaged Train Loss (Regular Model): 0.1501
Averaged Train Loss (Regular + Proto): 0.4650
Std Test Accuracy (Regular Model): 0.1005
Std Test Accuracy (Prototype Model): 0.0998
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([10.0733, 11.7017,  9.9639, 10.7065, 10.0009, 10.4249,  9.9639, 10.5577,
        12.1421, 12.0030], device='cuda:0')
min_gap tensor(9.9639, device='cuda:0')
max_gap tensor(12.1421, device='cuda:0')
Server loss: 5.043948173522949
end Update
server_global_time: 132.209073160775
only_train_time: 1265.0296638319269

-------------Global Round number: 7-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6487
Averaged Test Accuracy (Prototype Model): 0.6342
Averaged Train Loss (Regular Model): 0.0755
Averaged Train Loss (Regular + Proto): 0.3824
Std Test Accuracy (Regular Model): 0.0992
Std Test Accuracy (Prototype Model): 0.0974
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 2, 8, 1, 5, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 2, 8, 1, 5, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([11.8313, 13.3218, 11.6069, 12.4084, 11.6069, 11.9125, 11.6219, 12.3269,
        14.1014, 13.3557], device='cuda:0')
min_gap tensor(11.6069, device='cuda:0')
max_gap tensor(14.1014, device='cuda:0')
Server loss: 8.98537826538086
end Update
server_global_time: 149.19409579690546
only_train_time: 1424.7154373852536

-------------Global Round number: 8-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6503
Averaged Test Accuracy (Prototype Model): 0.6361
Averaged Train Loss (Regular Model): 0.0676
Averaged Train Loss (Regular + Proto): 0.3900
Std Test Accuracy (Regular Model): 0.0991
Std Test Accuracy (Prototype Model): 0.0975
tobetrained:
[0, 2, 8, 1, 5, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 2 begin training
Edge 8 begin training
Edge 1 begin training
Edge 5 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([12.9884, 14.6912, 12.9884, 13.7080, 13.0926, 13.0506, 13.0460, 13.7155,
        15.1005, 14.8458], device='cuda:0')
min_gap tensor(12.9884, device='cuda:0')
max_gap tensor(15.1005, device='cuda:0')
Server loss: 6.391011714935303
end Update
server_global_time: 165.55458317603916
only_train_time: 1584.6622733706608

-------------Global Round number: 9-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6490
Averaged Test Accuracy (Prototype Model): 0.6390
Averaged Train Loss (Regular Model): 0.0577
Averaged Train Loss (Regular + Proto): 0.4058
Std Test Accuracy (Regular Model): 0.1055
Std Test Accuracy (Prototype Model): 0.1051
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([14.0330, 15.5566, 14.0330, 15.1861, 14.1507, 14.8204, 14.1118, 15.3980,
        17.0135, 16.2508], device='cuda:0')
min_gap tensor(14.0330, device='cuda:0')
max_gap tensor(17.0135, device='cuda:0')
Server loss: 7.259649276733398
Number of samples: 326
end Update
server_global_time: 182.07999503426254
only_train_time: 1743.6466959612444

-------------Global Round number: 10-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6504
Averaged Test Accuracy (Prototype Model): 0.6370
Averaged Train Loss (Regular Model): 0.0658
Averaged Train Loss (Regular + Proto): 0.4384
Std Test Accuracy (Regular Model): 0.0989
Std Test Accuracy (Prototype Model): 0.0991
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 1, 5, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 1, 5, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([15.4548, 16.5656, 15.4249, 16.3694, 15.4249, 16.1606, 15.5760, 16.6827,
        18.0451, 17.5172], device='cuda:0')
min_gap tensor(15.4249, device='cuda:0')
max_gap tensor(18.0451, device='cuda:0')
Server loss: 7.27642297744751
end Update
server_global_time: 198.32919364515692
only_train_time: 1902.343524960801

-------------Global Round number: 11-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6544
Averaged Test Accuracy (Prototype Model): 0.6382
Averaged Train Loss (Regular Model): 0.0397
Averaged Train Loss (Regular + Proto): 0.4136
Std Test Accuracy (Regular Model): 0.1008
Std Test Accuracy (Prototype Model): 0.1097
tobetrained:
[0, 8, 2, 1, 5, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 1 begin training
Edge 5 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 9, 5, 1, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 9, 5, 1, 4, 6, 3, 7]
class-wise minimum distance tensor([16.5416, 18.0327, 16.1837, 17.7312, 16.1837, 17.1703, 16.4798, 17.6399,
        19.2961, 18.6024], device='cuda:0')
min_gap tensor(16.1837, device='cuda:0')
max_gap tensor(19.2961, device='cuda:0')
Server loss: 7.085871696472168
end Update
server_global_time: 214.8708099881187
only_train_time: 2061.3565921224654

-------------Global Round number: 12-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6507
Averaged Test Accuracy (Prototype Model): 0.6434
Averaged Train Loss (Regular Model): 0.0476
Averaged Train Loss (Regular + Proto): 0.4454
Std Test Accuracy (Regular Model): 0.0990
Std Test Accuracy (Prototype Model): 0.1024
tobetrained:
[0, 8, 2, 9, 5, 1, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 9 begin training
Edge 5 begin training
Edge 1 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([17.4588, 19.2932, 17.2973, 18.6193, 17.6058, 18.4732, 17.2973, 19.1268,
        20.3490, 19.8281], device='cuda:0')
min_gap tensor(17.2973, device='cuda:0')
max_gap tensor(20.3490, device='cuda:0')
Server loss: 6.266988277435303
end Update
server_global_time: 231.48706488497555
only_train_time: 2219.629395584576

-------------Global Round number: 13-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6557
Averaged Test Accuracy (Prototype Model): 0.6458
Averaged Train Loss (Regular Model): 0.0399
Averaged Train Loss (Regular + Proto): 0.4383
Std Test Accuracy (Regular Model): 0.0954
Std Test Accuracy (Prototype Model): 0.0971
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([18.4756, 20.0046, 18.4208, 20.0663, 18.6342, 19.4729, 18.4208, 20.3968,
        21.0872, 21.0026], device='cuda:0')
min_gap tensor(18.4208, device='cuda:0')
max_gap tensor(21.0872, device='cuda:0')
Server loss: 6.029128551483154
end Update
server_global_time: 247.9090828197077
only_train_time: 2378.299369835295

-------------Global Round number: 14-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6537
Averaged Test Accuracy (Prototype Model): 0.6424
Averaged Train Loss (Regular Model): 0.0415
Averaged Train Loss (Regular + Proto): 0.4619
Std Test Accuracy (Regular Model): 0.0973
Std Test Accuracy (Prototype Model): 0.1067
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([19.0779, 21.4083, 19.0779, 20.8180, 19.2058, 20.3901, 19.1412, 20.7777,
        22.3824, 21.8343], device='cuda:0')
min_gap tensor(19.0779, device='cuda:0')
max_gap tensor(22.3824, device='cuda:0')
Server loss: 10.395211219787598
end Update
server_global_time: 264.4787040343508
only_train_time: 2537.6863342523575

-------------Global Round number: 15-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6501
Averaged Test Accuracy (Prototype Model): 0.6369
Averaged Train Loss (Regular Model): 0.0519
Averaged Train Loss (Regular + Proto): 0.4941
Std Test Accuracy (Regular Model): 0.0966
Std Test Accuracy (Prototype Model): 0.1070
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([20.3303, 22.1359, 20.2003, 21.8554, 20.4796, 21.6926, 20.2003, 22.3446,
        23.6399, 22.8248], device='cuda:0')
min_gap tensor(20.2003, device='cuda:0')
max_gap tensor(23.6399, device='cuda:0')
Server loss: 6.548533916473389
end Update
server_global_time: 280.8000030461699
only_train_time: 2697.210282607004

-------------Global Round number: 16-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6596
Averaged Test Accuracy (Prototype Model): 0.6464
Averaged Train Loss (Regular Model): 0.0276
Averaged Train Loss (Regular + Proto): 0.4653
Std Test Accuracy (Regular Model): 0.0959
Std Test Accuracy (Prototype Model): 0.1018
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
Edge 4 begin training
Edge 6 begin training
Edge 3 begin training
Edge 7 begin training
readyList:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
aggregation_buffer:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
class-wise minimum distance tensor([20.9920, 23.1065, 20.9446, 22.5343, 21.0156, 22.4615, 20.9446, 23.2013,
        24.6140, 23.6089], device='cuda:0')
min_gap tensor(20.9446, device='cuda:0')
max_gap tensor(24.6140, device='cuda:0')
Server loss: 7.079641819000244
end Update
server_global_time: 297.301707518287
only_train_time: 2856.183116021566

-------------Global Round number: 17-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.6528
Averaged Test Accuracy (Prototype Model): 0.6437
Averaged Train Loss (Regular Model): 0.0266
Averaged Train Loss (Regular + Proto): 0.4804
Std Test Accuracy (Regular Model): 0.1141
Std Test Accuracy (Prototype Model): 0.1168
tobetrained:
[0, 8, 2, 5, 1, 9, 4, 6, 3, 7]
Edge 0 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 1 begin training
Edge 9 begin training
