==================================================
goal = test
device = cuda
device_id = 0
dataset = FashionMNIST_dir_0.3_imbalance_40
num_classes = 10
model_family = HCNNs8
batch_size = 256
local_learning_rate = 0.06
use_decay_scheduler = False
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 200
edge_epochs = 1
local_epochs = 5
algorithm = FedTGP
join_ratio = 1.0
random_join_ratio = False
num_clients = 40
num_edges = 10
prev = 0
times = 1
eval_gap = 1
save_folder_name = temp
auto_break = False
feature_dim = 512
vocab_size = 98635
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
optimizer = SGD
lamda = 1.0
weight_decay = 0
trans_delay_simulate = False
momentum = 0.8
agg_type = 0
buffersize = 10
gl_use_clients = 1
test_useglclassifier = 1
gamma = 1
drawtsne = 1
drawround = 20
noise_dim = 512
generator_learning_rate = 0.0001
hidden_dim = 512
server_epochs = 100
alpha = 1.0
beta = 1.0
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
server_learning_rate = 0.01
margin_threthold = 100.0
generator_path = stylegan/stylegan-xl-models/imagenet64.pkl
stable_diffusion_prompt = a cat
server_batch_size = 100
gen_batch_size = 4
mu = 50.0
==================================================
Random seed set as 42

============= Running time: 0th =============
Creating server and clients ...
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 0
label_counts: defaultdict(<class 'int'>, {0: 287, 1: 338, 5: 106, 9: 545, 3: 26, 2: 98, 6: 3, 4: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 1
label_counts: defaultdict(<class 'int'>, {7: 199, 4: 630, 1: 507, 5: 47, 0: 18, 2: 18, 3: 3, 6: 2})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 2
label_counts: defaultdict(<class 'int'>, {9: 99, 0: 190, 7: 312, 5: 157, 6: 67, 4: 11, 3: 30, 8: 6, 2: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 3
label_counts: defaultdict(<class 'int'>, {8: 190, 3: 171, 2: 395, 0: 3, 4: 51, 6: 100, 9: 19, 5: 4})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 4
label_counts: defaultdict(<class 'int'>, {1: 428, 0: 327, 5: 553, 2: 202, 4: 5})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 5
label_counts: defaultdict(<class 'int'>, {4: 421, 6: 633, 1: 100, 3: 41, 2: 58, 8: 45, 5: 13, 7: 11, 0: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 6
label_counts: defaultdict(<class 'int'>, {4: 260, 8: 384, 9: 425, 3: 24, 6: 31, 2: 6, 1: 12, 7: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 7
label_counts: defaultdict(<class 'int'>, {9: 477, 0: 36, 6: 335, 8: 645, 5: 13, 1: 11, 4: 53, 3: 38, 7: 16, 2: 7})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 8
label_counts: defaultdict(<class 'int'>, {9: 102, 4: 502, 2: 81, 0: 124, 5: 17, 6: 63, 8: 26, 3: 9, 1: 3})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 9
label_counts: defaultdict(<class 'int'>, {3: 943, 1: 139, 2: 177, 0: 75})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 10
label_counts: defaultdict(<class 'int'>, {4: 883, 8: 445, 2: 57, 3: 12, 5: 19, 0: 32, 7: 1, 1: 1, 6: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 11
label_counts: defaultdict(<class 'int'>, {6: 147, 1: 58, 8: 220, 4: 230, 5: 54, 3: 44, 7: 8, 9: 88, 2: 13})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 12
label_counts: defaultdict(<class 'int'>, {5: 101, 6: 248, 3: 165, 1: 263, 0: 206, 9: 14, 4: 1, 7: 1})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 13
label_counts: defaultdict(<class 'int'>, {3: 402, 2: 795, 7: 197, 0: 11, 4: 7, 5: 3, 1: 7})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 14
label_counts: defaultdict(<class 'int'>, {3: 131, 0: 312, 5: 65, 1: 57, 9: 218, 2: 44, 4: 21, 8: 3})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 15
label_counts: defaultdict(<class 'int'>, {6: 980, 5: 215, 1: 39, 0: 83, 3: 12, 4: 2})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 16
label_counts: defaultdict(<class 'int'>, {8: 280, 1: 860, 3: 83, 4: 58, 5: 68, 0: 140, 6: 18, 7: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 17
label_counts: defaultdict(<class 'int'>, {5: 490, 8: 642, 3: 30, 4: 28, 0: 104, 2: 16, 6: 21, 1: 2, 7: 1})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 18
label_counts: defaultdict(<class 'int'>, {5: 27, 7: 229, 4: 108, 8: 391, 1: 105, 3: 33, 6: 2, 0: 1, 2: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 19
label_counts: defaultdict(<class 'int'>, {1: 364, 0: 1204})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 20
label_counts: defaultdict(<class 'int'>, {9: 858, 2: 19, 7: 131, 1: 290, 6: 44, 4: 216, 0: 37, 5: 157, 8: 1, 3: 1})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 21
label_counts: defaultdict(<class 'int'>, {7: 16, 1: 383, 4: 288, 6: 225, 0: 136, 3: 62, 8: 4, 9: 1, 5: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 22
label_counts: defaultdict(<class 'int'>, {7: 387, 5: 243, 1: 102, 6: 68, 2: 9, 0: 12, 8: 15, 4: 1, 3: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 23
label_counts: defaultdict(<class 'int'>, {9: 256, 0: 232, 8: 141, 1: 32, 5: 40, 3: 2, 7: 1, 6: 1})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 24
label_counts: defaultdict(<class 'int'>, {4: 309, 3: 447, 5: 120, 9: 235, 0: 62, 8: 15, 1: 2})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 25
label_counts: defaultdict(<class 'int'>, {3: 388, 5: 505, 1: 34, 0: 81, 7: 222, 2: 154, 4: 7})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 26
label_counts: defaultdict(<class 'int'>, {0: 443, 8: 568, 7: 172, 2: 116, 4: 139, 1: 10, 3: 26, 5: 5})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 27
label_counts: defaultdict(<class 'int'>, {2: 186, 5: 530, 6: 253, 3: 75, 0: 88, 4: 5, 7: 1})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 28
label_counts: defaultdict(<class 'int'>, {0: 22, 1: 63, 9: 281, 3: 24, 7: 176, 2: 50, 8: 93, 4: 1, 5: 14, 6: 2})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 29
label_counts: defaultdict(<class 'int'>, {5: 337, 8: 138, 6: 3, 7: 363, 1: 20, 9: 164, 3: 170, 2: 27, 4: 2})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 30
label_counts: defaultdict(<class 'int'>, {8: 229, 7: 302, 0: 243, 9: 43, 5: 24, 2: 1, 1: 2, 3: 2})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 31
label_counts: defaultdict(<class 'int'>, {2: 510, 1: 223, 4: 583, 0: 98})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 32
label_counts: defaultdict(<class 'int'>, {9: 1142, 7: 49, 2: 276, 6: 75, 5: 146, 3: 51, 1: 20, 0: 31, 8: 12, 4: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 33
label_counts: defaultdict(<class 'int'>, {0: 151, 2: 405, 3: 276, 1: 76, 7: 122, 6: 254, 4: 83})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 34
label_counts: defaultdict(<class 'int'>, {6: 870, 2: 880, 1: 42, 0: 172, 3: 12, 4: 9})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 35
label_counts: defaultdict(<class 'int'>, {0: 300, 2: 90, 4: 312, 7: 36, 3: 121, 1: 25, 5: 70, 9: 70, 6: 18, 8: 1})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 36
label_counts: defaultdict(<class 'int'>, {8: 221, 3: 364, 6: 412, 2: 127, 7: 124, 9: 158, 1: 41, 0: 3, 4: 5})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 37
label_counts: defaultdict(<class 'int'>, {3: 1002, 7: 2178, 6: 142, 5: 11, 2: 20, 0: 1, 4: 3})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 38
label_counts: defaultdict(<class 'int'>, {5: 1124, 1: 545, 0: 14, 2: 23, 3: 21, 4: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 39
label_counts: defaultdict(<class 'int'>, {8: 501, 2: 387, 6: 233, 1: 41, 5: 12, 7: 2, 0: 13, 3: 2, 4: 1, 9: 3})

Join ratio / total clients: 1.0 / 40
Finished creating server and clients.
Trainable_prototypes(
  (embedings): Embedding(10, 512)
  (middle): Sequential(
    (0): Sequential(
      (0): Linear(in_features=512, out_features=512, bias=True)
      (1): ReLU()
    )
  )
  (fc): Linear(in_features=512, out_features=512, bias=True)
)
tobetrained:
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
Edge 9 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 8 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 7 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 6 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 5 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 4 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 3 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 2 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 1 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 0 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
readyList:
[7, 1, 6, 8, 5, 0, 4, 2, 3, 9]
aggregation_buffer:
[7, 1, 6, 8, 5, 0, 4, 2, 3, 9]
class-wise minimum distance tensor([1.1255, 1.6518, 1.0356, 1.1255, 1.0785, 1.5266, 1.0356, 1.5266, 1.8749,
        3.7157], device='cuda:0')
min_gap tensor(1.0356, device='cuda:0')
max_gap tensor(3.7157, device='cuda:0')
Server loss: 5.393249988555908
Number of samples: 324
end Update
server_global_time: 0.794707715511322
only_train_time: 12.39906331896782

-------------Global Round number: 0-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8190
Averaged Test Accuracy (Prototype Model): 0.5999
Averaged Train Loss (Regular Model): 0.6283
Averaged Train Loss (Regular + Proto): 0.6283
Std Test Accuracy (Regular Model): 0.1442
Std Test Accuracy (Prototype Model): 0.2033
tobetrained:
[7, 1, 6, 8, 5, 0, 4, 2, 3, 9]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 8 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 2 begin training
Edge 3 begin training
Edge 9 begin training
readyList:
[7, 6, 1, 8, 2, 5, 0, 4, 9, 3]
aggregation_buffer:
[7, 6, 1, 8, 2, 5, 0, 4, 9, 3]
class-wise minimum distance tensor([1.0731, 1.3454, 0.6653, 1.0786, 0.6653, 1.2947, 0.7323, 1.2947, 1.7838,
        2.7683], device='cuda:0')
min_gap tensor(0.6653, device='cuda:0')
max_gap tensor(2.7683, device='cuda:0')
Server loss: 3.79010272026062
end Update
server_global_time: 1.939721792936325
only_train_time: 29.651147924363613

-------------Global Round number: 1-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8827
Averaged Test Accuracy (Prototype Model): 0.8261
Averaged Train Loss (Regular Model): 0.3566
Averaged Train Loss (Regular + Proto): 0.4744
Std Test Accuracy (Regular Model): 0.0775
Std Test Accuracy (Prototype Model): 0.1268
tobetrained:
[7, 6, 1, 8, 2, 5, 0, 4, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 6, 1, 5, 8, 2, 0, 4, 9, 3]
aggregation_buffer:
[7, 6, 1, 5, 8, 2, 0, 4, 9, 3]
class-wise minimum distance tensor([1.4474, 1.9858, 0.7555, 1.4474, 0.7555, 1.7382, 0.9131, 1.7382, 2.6442,
        3.8797], device='cuda:0')
min_gap tensor(0.7555, device='cuda:0')
max_gap tensor(3.8797, device='cuda:0')
Server loss: 4.857560634613037
end Update
server_global_time: 3.0677263736724854
only_train_time: 46.64791414141655

-------------Global Round number: 2-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8952
Averaged Test Accuracy (Prototype Model): 0.8639
Averaged Train Loss (Regular Model): 0.2709
Averaged Train Loss (Regular + Proto): 0.4002
Std Test Accuracy (Regular Model): 0.0727
Std Test Accuracy (Prototype Model): 0.0850
tobetrained:
[7, 6, 1, 5, 8, 2, 0, 4, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 5 begin training
Edge 8 begin training
Edge 2 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 8, 6, 2, 5, 4, 9, 0, 3]
aggregation_buffer:
[7, 1, 8, 6, 2, 5, 4, 9, 0, 3]
class-wise minimum distance tensor([1.9044, 2.6678, 0.9148, 1.9044, 0.9148, 2.3511, 1.1512, 2.3511, 3.7447,
        5.0301], device='cuda:0')
min_gap tensor(0.9148, device='cuda:0')
max_gap tensor(5.0301, device='cuda:0')
Server loss: 4.996862888336182
end Update
server_global_time: 4.207936719059944
only_train_time: 63.76359089463949

-------------Global Round number: 3-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9056
Averaged Test Accuracy (Prototype Model): 0.8779
Averaged Train Loss (Regular Model): 0.2247
Averaged Train Loss (Regular + Proto): 0.3730
Std Test Accuracy (Regular Model): 0.0622
Std Test Accuracy (Prototype Model): 0.0749
tobetrained:
[7, 1, 8, 6, 2, 5, 4, 9, 0, 3]
Edge 7 begin training
Edge 1 begin training
Edge 8 begin training
Edge 6 begin training
Edge 2 begin training
Edge 5 begin training
Edge 4 begin training
Edge 9 begin training
Edge 0 begin training
Edge 3 begin training
readyList:
[7, 6, 8, 1, 2, 5, 0, 4, 9, 3]
aggregation_buffer:
[7, 6, 8, 1, 2, 5, 0, 4, 9, 3]
class-wise minimum distance tensor([2.5083, 3.3917, 1.1421, 2.5083, 1.1421, 2.9680, 1.3792, 2.9680, 4.7662,
        5.9953], device='cuda:0')
min_gap tensor(1.1421, device='cuda:0')
max_gap tensor(5.9953, device='cuda:0')
Server loss: 5.744068145751953
end Update
server_global_time: 5.343958884477615
only_train_time: 80.88048440217972

-------------Global Round number: 4-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9045
Averaged Test Accuracy (Prototype Model): 0.8686
Averaged Train Loss (Regular Model): 0.1935
Averaged Train Loss (Regular + Proto): 0.3652
Std Test Accuracy (Regular Model): 0.0716
Std Test Accuracy (Prototype Model): 0.0929
tobetrained:
[7, 6, 8, 1, 2, 5, 0, 4, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 8 begin training
Edge 1 begin training
Edge 2 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 8, 1, 6, 2, 0, 5, 9, 4, 3]
aggregation_buffer:
[7, 8, 1, 6, 2, 0, 5, 9, 4, 3]
class-wise minimum distance tensor([3.0743, 4.1932, 1.4308, 3.0743, 1.4308, 3.7145, 1.6782, 3.7145, 5.8317,
        7.1620], device='cuda:0')
min_gap tensor(1.4308, device='cuda:0')
max_gap tensor(7.1620, device='cuda:0')
Server loss: 6.503066062927246
end Update
server_global_time: 6.4985624104738235
only_train_time: 97.94167653471231

-------------Global Round number: 5-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9061
Averaged Test Accuracy (Prototype Model): 0.8893
Averaged Train Loss (Regular Model): 0.1662
Averaged Train Loss (Regular + Proto): 0.3620
Std Test Accuracy (Regular Model): 0.0713
Std Test Accuracy (Prototype Model): 0.0683
tobetrained:
[7, 8, 1, 6, 2, 0, 5, 9, 4, 3]
Edge 7 begin training
Edge 8 begin training
Edge 1 begin training
Edge 6 begin training
Edge 2 begin training
Edge 0 begin training
Edge 5 begin training
Edge 9 begin training
Edge 4 begin training
Edge 3 begin training
readyList:
[7, 6, 1, 8, 2, 5, 0, 4, 9, 3]
aggregation_buffer:
[7, 6, 1, 8, 2, 5, 0, 4, 9, 3]
class-wise minimum distance tensor([3.7984, 4.9500, 1.8554, 3.7984, 1.8554, 4.5088, 2.0390, 4.5088, 7.0677,
        8.4359], device='cuda:0')
min_gap tensor(1.8554, device='cuda:0')
max_gap tensor(8.4359, device='cuda:0')
Server loss: 7.128323554992676
end Update
server_global_time: 7.62150564044714
only_train_time: 115.06517332047224

-------------Global Round number: 6-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9140
Averaged Test Accuracy (Prototype Model): 0.8875
Averaged Train Loss (Regular Model): 0.1351
Averaged Train Loss (Regular + Proto): 0.3551
Std Test Accuracy (Regular Model): 0.0601
Std Test Accuracy (Prototype Model): 0.0729
tobetrained:
[7, 6, 1, 8, 2, 5, 0, 4, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 8, 0, 2, 5, 4, 9, 3]
aggregation_buffer:
[7, 1, 6, 8, 0, 2, 5, 4, 9, 3]
class-wise minimum distance tensor([4.4735, 6.0137, 2.2907, 4.4735, 2.2907, 5.3718, 2.5112, 5.3718, 8.1401,
        9.8823], device='cuda:0')
min_gap tensor(2.2907, device='cuda:0')
max_gap tensor(9.8823, device='cuda:0')
Server loss: 7.521206855773926
end Update
server_global_time: 8.99850732833147
only_train_time: 132.9240013435483

-------------Global Round number: 7-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9173
Averaged Test Accuracy (Prototype Model): 0.8981
Averaged Train Loss (Regular Model): 0.1146
Averaged Train Loss (Regular + Proto): 0.3615
Std Test Accuracy (Regular Model): 0.0547
Std Test Accuracy (Prototype Model): 0.0645
tobetrained:
[7, 1, 6, 8, 0, 2, 5, 4, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 8 begin training
Edge 0 begin training
Edge 2 begin training
Edge 5 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 8, 5, 0, 4, 2, 9, 3]
aggregation_buffer:
[7, 1, 6, 8, 5, 0, 4, 2, 9, 3]
class-wise minimum distance tensor([ 5.2552,  6.9777,  2.8510,  5.2552,  2.8510,  6.3237,  2.9058,  6.3237,
         9.4619, 11.0914], device='cuda:0')
min_gap tensor(2.8510, device='cuda:0')
max_gap tensor(11.0914, device='cuda:0')
Server loss: 8.409032821655273
end Update
server_global_time: 10.179971560835838
only_train_time: 149.77216202765703

-------------Global Round number: 8-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9163
Averaged Test Accuracy (Prototype Model): 0.9014
Averaged Train Loss (Regular Model): 0.0980
Averaged Train Loss (Regular + Proto): 0.3732
Std Test Accuracy (Regular Model): 0.0624
Std Test Accuracy (Prototype Model): 0.0636
tobetrained:
[7, 1, 6, 8, 5, 0, 4, 2, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 8 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 2 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 6, 1, 8, 5, 0, 2, 4, 9, 3]
aggregation_buffer:
[7, 6, 1, 8, 5, 0, 2, 4, 9, 3]
class-wise minimum distance tensor([ 6.2117,  8.1650,  3.5190,  6.2117,  3.4592,  7.2515,  3.4592,  7.2515,
        10.7425, 12.4824], device='cuda:0')
min_gap tensor(3.4592, device='cuda:0')
max_gap tensor(12.4824, device='cuda:0')
Server loss: 10.413003921508789
end Update
server_global_time: 11.379689060151577
only_train_time: 167.31911257654428

-------------Global Round number: 9-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9170
Averaged Test Accuracy (Prototype Model): 0.8992
Averaged Train Loss (Regular Model): 0.0863
Averaged Train Loss (Regular + Proto): 0.3950
Std Test Accuracy (Regular Model): 0.0589
Std Test Accuracy (Prototype Model): 0.0676
tobetrained:
[7, 6, 1, 8, 5, 0, 2, 4, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 8 begin training
Edge 5 begin training
Edge 0 begin training
Edge 2 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 5, 8, 2, 0, 9, 4, 3]
aggregation_buffer:
[7, 1, 6, 5, 8, 2, 0, 9, 4, 3]
class-wise minimum distance tensor([ 7.0337,  9.5918,  4.3292,  7.2754,  4.1331,  8.2974,  4.1331,  8.2974,
        12.0709, 14.1482], device='cuda:0')
min_gap tensor(4.1331, device='cuda:0')
max_gap tensor(14.1482, device='cuda:0')
Server loss: 11.56200122833252
end Update
server_global_time: 12.627479925751686
only_train_time: 185.35291313380003

-------------Global Round number: 10-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9243
Averaged Test Accuracy (Prototype Model): 0.9048
Averaged Train Loss (Regular Model): 0.0714
Averaged Train Loss (Regular + Proto): 0.4125
Std Test Accuracy (Regular Model): 0.0501
Std Test Accuracy (Prototype Model): 0.0653
tobetrained:
[7, 1, 6, 5, 8, 2, 0, 9, 4, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 5 begin training
Edge 8 begin training
Edge 2 begin training
Edge 0 begin training
Edge 9 begin training
Edge 4 begin training
Edge 3 begin training
readyList:
[7, 6, 1, 8, 2, 5, 4, 0, 9, 3]
aggregation_buffer:
[7, 6, 1, 8, 2, 5, 4, 0, 9, 3]
class-wise minimum distance tensor([ 8.0563, 10.8885,  5.1298,  8.3325,  4.9876,  9.3367,  4.9876,  9.3367,
        13.2805, 15.5434], device='cuda:0')
min_gap tensor(4.9876, device='cuda:0')
max_gap tensor(15.5434, device='cuda:0')
Server loss: 9.863738059997559
end Update
server_global_time: 13.736082807183266
only_train_time: 202.36822926998138

-------------Global Round number: 11-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9198
Averaged Test Accuracy (Prototype Model): 0.9018
Averaged Train Loss (Regular Model): 0.0729
Averaged Train Loss (Regular + Proto): 0.4599
Std Test Accuracy (Regular Model): 0.0506
Std Test Accuracy (Prototype Model): 0.0713
tobetrained:
[7, 6, 1, 8, 2, 5, 4, 0, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 4 begin training
Edge 0 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 6, 1, 8, 5, 0, 9, 4, 2, 3]
aggregation_buffer:
[7, 6, 1, 8, 5, 0, 9, 4, 2, 3]
class-wise minimum distance tensor([ 9.2621, 12.5319,  5.7592,  9.4001,  5.6531, 10.4861,  5.6531, 10.4861,
        14.7646, 17.1769], device='cuda:0')
min_gap tensor(5.6531, device='cuda:0')
max_gap tensor(17.1769, device='cuda:0')
Server loss: 12.492356300354004
end Update
server_global_time: 14.911737233400345
only_train_time: 220.4754663258791

-------------Global Round number: 12-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9067
Averaged Test Accuracy (Prototype Model): 0.9079
Averaged Train Loss (Regular Model): 0.0709
Averaged Train Loss (Regular + Proto): 0.4956
Std Test Accuracy (Regular Model): 0.0836
Std Test Accuracy (Prototype Model): 0.0645
tobetrained:
[7, 6, 1, 8, 5, 0, 9, 4, 2, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 8 begin training
Edge 5 begin training
Edge 0 begin training
Edge 9 begin training
Edge 4 begin training
Edge 2 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 2, 0, 5, 4, 8, 9, 3]
aggregation_buffer:
[7, 1, 6, 2, 0, 5, 4, 8, 9, 3]
class-wise minimum distance tensor([10.1831, 13.7169,  6.8585, 10.9989,  6.4307, 11.3797,  6.4307, 11.3797,
        16.0484, 19.1114], device='cuda:0')
min_gap tensor(6.4307, device='cuda:0')
max_gap tensor(19.1114, device='cuda:0')
Server loss: 13.332653045654297
end Update
server_global_time: 16.071981012821198
only_train_time: 237.9551987797022

-------------Global Round number: 13-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9097
Averaged Test Accuracy (Prototype Model): 0.8935
Averaged Train Loss (Regular Model): 0.0961
Averaged Train Loss (Regular + Proto): 0.6121
Std Test Accuracy (Regular Model): 0.0807
Std Test Accuracy (Prototype Model): 0.0969
tobetrained:
[7, 1, 6, 2, 0, 5, 4, 8, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 2 begin training
Edge 0 begin training
Edge 5 begin training
Edge 4 begin training
Edge 8 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 6, 8, 2, 1, 9, 0, 4, 5, 3]
aggregation_buffer:
[7, 6, 8, 2, 1, 9, 0, 4, 5, 3]
class-wise minimum distance tensor([11.0994, 14.8098,  6.4062, 11.5167,  6.4062, 12.7979,  6.8610, 12.7979,
        17.0304, 20.8496], device='cuda:0')
min_gap tensor(6.4062, device='cuda:0')
max_gap tensor(20.8496, device='cuda:0')
Server loss: 15.18883228302002
end Update
server_global_time: 17.20167163014412
only_train_time: 255.747264765203

-------------Global Round number: 14-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8999
Averaged Test Accuracy (Prototype Model): 0.8668
Averaged Train Loss (Regular Model): 0.1518
Averaged Train Loss (Regular + Proto): 0.7706
Std Test Accuracy (Regular Model): 0.0968
Std Test Accuracy (Prototype Model): 0.1540
tobetrained:
[7, 6, 8, 2, 1, 9, 0, 4, 5, 3]
Edge 7 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 1 begin training
Edge 9 begin training
Edge 0 begin training
Edge 4 begin training
Edge 5 begin training
Edge 3 begin training
readyList:
[7, 6, 8, 1, 5, 0, 2, 4, 9, 3]
aggregation_buffer:
[7, 6, 8, 1, 5, 0, 2, 4, 9, 3]
class-wise minimum distance tensor([12.1735, 18.1234,  7.5883, 13.4196,  7.5883, 14.4839,  7.8739, 14.4839,
        19.1202, 23.2553], device='cuda:0')
min_gap tensor(7.5883, device='cuda:0')
max_gap tensor(23.2553, device='cuda:0')
Server loss: 14.424848556518555
end Update
server_global_time: 18.416789203882217
only_train_time: 273.52168572694063

-------------Global Round number: 15-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9030
Averaged Test Accuracy (Prototype Model): 0.8545
Averaged Train Loss (Regular Model): 0.0895
Averaged Train Loss (Regular + Proto): 0.7287
Std Test Accuracy (Regular Model): 0.0953
Std Test Accuracy (Prototype Model): 0.1859
tobetrained:
[7, 6, 8, 1, 5, 0, 2, 4, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 8 begin training
Edge 1 begin training
Edge 5 begin training
Edge 0 begin training
Edge 2 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 8, 6, 5, 0, 4, 9, 2, 3]
aggregation_buffer:
[7, 1, 8, 6, 5, 0, 4, 9, 2, 3]
class-wise minimum distance tensor([12.6118, 19.4976,  8.5776, 14.4757,  8.4510, 15.4990,  8.4510, 15.4990,
        19.8555, 24.9145], device='cuda:0')
min_gap tensor(8.4510, device='cuda:0')
max_gap tensor(24.9145, device='cuda:0')
Server loss: 15.842120170593262
end Update
server_global_time: 19.57431848347187
only_train_time: 291.11326579749584

-------------Global Round number: 16-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9039
Averaged Test Accuracy (Prototype Model): 0.8398
Averaged Train Loss (Regular Model): 0.2106
Averaged Train Loss (Regular + Proto): 0.9754
Std Test Accuracy (Regular Model): 0.0793
Std Test Accuracy (Prototype Model): 0.2282
tobetrained:
[7, 1, 8, 6, 5, 0, 4, 9, 2, 3]
Edge 7 begin training
Edge 1 begin training
Edge 8 begin training
Edge 6 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 2 begin training
Edge 3 begin training
readyList:
[6, 1, 8, 7, 2, 0, 5, 4, 9, 3]
aggregation_buffer:
[6, 1, 8, 7, 2, 0, 5, 4, 9, 3]
class-wise minimum distance tensor([14.5052, 22.1813,  9.5613, 16.2845,  9.5613, 16.9619,  9.6441, 16.9619,
        20.8284, 26.7938], device='cuda:0')
min_gap tensor(9.5613, device='cuda:0')
max_gap tensor(26.7938, device='cuda:0')
Server loss: 16.3142032623291
end Update
server_global_time: 20.711416468024254
only_train_time: 308.8825198933482

-------------Global Round number: 17-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9034
Averaged Test Accuracy (Prototype Model): 0.8799
Averaged Train Loss (Regular Model): 0.1180
Averaged Train Loss (Regular + Proto): 0.9060
Std Test Accuracy (Regular Model): 0.0824
Std Test Accuracy (Prototype Model): 0.1291
tobetrained:
[6, 1, 8, 7, 2, 0, 5, 4, 9, 3]
Edge 6 begin training
Edge 1 begin training
Edge 8 begin training
Edge 7 begin training
Edge 2 begin training
Edge 0 begin training
Edge 5 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 8, 2, 0, 5, 4, 9, 3]
aggregation_buffer:
[7, 1, 6, 8, 2, 0, 5, 4, 9, 3]
class-wise minimum distance tensor([15.5753, 22.3341,  9.9421, 17.4882,  9.9421, 18.3844, 10.3350, 18.3844,
        21.9012, 29.1509], device='cuda:0')
min_gap tensor(9.9421, device='cuda:0')
max_gap tensor(29.1509, device='cuda:0')
Server loss: 18.522336959838867
end Update
server_global_time: 21.84997657686472
only_train_time: 326.8746363669634

-------------Global Round number: 18-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8926
Averaged Test Accuracy (Prototype Model): 0.8688
Averaged Train Loss (Regular Model): 0.1785
Averaged Train Loss (Regular + Proto): 1.0557
Std Test Accuracy (Regular Model): 0.1120
Std Test Accuracy (Prototype Model): 0.1648
tobetrained:
[7, 1, 6, 8, 2, 0, 5, 4, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 0 begin training
Edge 5 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 6, 8, 2, 5, 4, 1, 9, 0, 3]
aggregation_buffer:
[7, 6, 8, 2, 5, 4, 1, 9, 0, 3]
class-wise minimum distance tensor([17.7034, 25.5626, 11.5018, 19.6046, 11.5018, 21.1474, 12.0968, 21.1474,
        24.3153, 32.0908], device='cuda:0')
min_gap tensor(11.5018, device='cuda:0')
max_gap tensor(32.0908, device='cuda:0')
Server loss: 19.54376983642578
end Update
server_global_time: 23.017312541604042
only_train_time: 344.22228072583675

-------------Global Round number: 19-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9104
Averaged Test Accuracy (Prototype Model): 0.8730
Averaged Train Loss (Regular Model): 0.1277
Averaged Train Loss (Regular + Proto): 1.0256
Std Test Accuracy (Regular Model): 0.0683
Std Test Accuracy (Prototype Model): 0.1483
tobetrained:
[7, 6, 8, 2, 5, 4, 1, 9, 0, 3]
Edge 7 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 4 begin training
Edge 1 begin training
Edge 9 begin training
Edge 0 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 8, 2, 5, 0, 4, 9, 3]
aggregation_buffer:
[7, 1, 6, 8, 2, 5, 0, 4, 9, 3]
class-wise minimum distance tensor([19.7948, 28.3898, 12.9468, 22.0492, 12.9468, 23.7186, 13.9700, 23.7186,
        27.5040, 35.8582], device='cuda:0')
min_gap tensor(12.9468, device='cuda:0')
max_gap tensor(35.8582, device='cuda:0')
Server loss: 18.878820419311523
Number of samples: 324
end Update
server_global_time: 24.145841285586357
only_train_time: 361.2904280722141

-------------Global Round number: 20-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9114
Averaged Test Accuracy (Prototype Model): 0.8740
Averaged Train Loss (Regular Model): 0.1680
Averaged Train Loss (Regular + Proto): 1.1929
Std Test Accuracy (Regular Model): 0.0715
Std Test Accuracy (Prototype Model): 0.1523
tobetrained:
[7, 1, 6, 8, 2, 5, 0, 4, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 0, 2, 5, 4, 8, 9, 3]
aggregation_buffer:
[7, 1, 6, 0, 2, 5, 4, 8, 9, 3]
class-wise minimum distance tensor([22.0639, 31.2382, 14.7660, 24.2426, 14.7660, 26.0322, 15.8399, 26.0322,
        29.9821, 39.4790], device='cuda:0')
min_gap tensor(14.7660, device='cuda:0')
max_gap tensor(39.4790, device='cuda:0')
Server loss: 22.589622497558594
end Update
server_global_time: 25.27852813154459
only_train_time: 378.7816954627633

-------------Global Round number: 21-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9048
Averaged Test Accuracy (Prototype Model): 0.8945
Averaged Train Loss (Regular Model): 0.1708
Averaged Train Loss (Regular + Proto): 1.3944
Std Test Accuracy (Regular Model): 0.0905
Std Test Accuracy (Prototype Model): 0.0973
tobetrained:
[7, 1, 6, 0, 2, 5, 4, 8, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 0 begin training
Edge 2 begin training
Edge 5 begin training
Edge 4 begin training
Edge 8 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 8, 2, 4, 5, 0, 9, 3]
aggregation_buffer:
[7, 1, 6, 8, 2, 4, 5, 0, 9, 3]
class-wise minimum distance tensor([23.2978, 34.5698, 16.3432, 25.8969, 16.3432, 29.1880, 16.6975, 29.1880,
        32.3156, 42.7056], device='cuda:0')
min_gap tensor(16.3432, device='cuda:0')
max_gap tensor(42.7056, device='cuda:0')
Server loss: 17.263269424438477
end Update
server_global_time: 26.55025639384985
only_train_time: 396.2419169023633

-------------Global Round number: 22-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9129
Averaged Test Accuracy (Prototype Model): 0.8889
Averaged Train Loss (Regular Model): 0.1709
Averaged Train Loss (Regular + Proto): 1.5838
Std Test Accuracy (Regular Model): 0.0650
Std Test Accuracy (Prototype Model): 0.1105
tobetrained:
[7, 1, 6, 8, 2, 4, 5, 0, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 4 begin training
Edge 5 begin training
Edge 0 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 0, 5, 8, 2, 9, 1, 6, 4, 3]
aggregation_buffer:
[7, 0, 5, 8, 2, 9, 1, 6, 4, 3]
class-wise minimum distance tensor([26.2396, 37.3274, 18.0256, 29.5169, 18.0256, 31.9718, 19.9690, 31.9718,
        34.4714, 45.0960], device='cuda:0')
min_gap tensor(18.0256, device='cuda:0')
max_gap tensor(45.0960, device='cuda:0')
Server loss: 29.168380737304688
end Update
server_global_time: 27.7411822155118
only_train_time: 413.9521972835064

-------------Global Round number: 23-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.9118
Averaged Test Accuracy (Prototype Model): 0.8997
Averaged Train Loss (Regular Model): 0.2207
Averaged Train Loss (Regular + Proto): 1.7300
Std Test Accuracy (Regular Model): 0.0715
Std Test Accuracy (Prototype Model): 0.1123
tobetrained:
[7, 0, 5, 8, 2, 9, 1, 6, 4, 3]
Edge 7 begin training
Edge 0 begin training
Edge 5 begin training
Edge 8 begin training
Edge 2 begin training
Edge 9 begin training
Edge 1 begin training
Edge 6 begin training
Edge 4 begin training
Edge 3 begin training
readyList:
[7, 6, 1, 2, 8, 5, 0, 4, 9, 3]
aggregation_buffer:
[7, 6, 1, 2, 8, 5, 0, 4, 9, 3]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
end Update
server_global_time: 28.9245086312294
only_train_time: 431.7075589224696

-------------Global Round number: 24-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8709
Averaged Test Accuracy (Prototype Model): 0.0975
Averaged Train Loss (Regular Model): nan
Averaged Train Loss (Regular + Proto): nan
Std Test Accuracy (Regular Model): 0.1731
Std Test Accuracy (Prototype Model): 0.1431
tobetrained:
[7, 6, 1, 2, 8, 5, 0, 4, 9, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 2 begin training
Edge 8 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 6, 8, 2, 5, 0, 4, 9, 3]
aggregation_buffer:
[7, 1, 6, 8, 2, 5, 0, 4, 9, 3]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
end Update
server_global_time: 30.11220971494913
only_train_time: 448.80159149318933

-------------Global Round number: 25-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.0975
Averaged Test Accuracy (Prototype Model): 0.0975
Averaged Train Loss (Regular Model): nan
Averaged Train Loss (Regular + Proto): nan
Std Test Accuracy (Regular Model): 0.1431
Std Test Accuracy (Prototype Model): 0.1431
tobetrained:
[7, 1, 6, 8, 2, 5, 0, 4, 9, 3]
Edge 7 begin training
Edge 1 begin training
Edge 6 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 3 begin training
readyList:
[7, 1, 8, 2, 5, 0, 4, 9, 6, 3]
aggregation_buffer:
[7, 1, 8, 2, 5, 0, 4, 9, 6, 3]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
end Update
server_global_time: 31.251124888658524
only_train_time: 466.45674562454224

-------------Global Round number: 26-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.0975
Averaged Test Accuracy (Prototype Model): 0.0975
Averaged Train Loss (Regular Model): nan
Averaged Train Loss (Regular + Proto): nan
Std Test Accuracy (Regular Model): 0.1431
Std Test Accuracy (Prototype Model): 0.1431
tobetrained:
[7, 1, 8, 2, 5, 0, 4, 9, 6, 3]
Edge 7 begin training
Edge 1 begin training
Edge 8 begin training
Edge 2 begin training
Edge 5 begin training
Edge 0 begin training
Edge 4 begin training
Edge 9 begin training
Edge 6 begin training
Edge 3 begin training
readyList:
[7, 6, 1, 8, 0, 5, 4, 9, 2, 3]
aggregation_buffer:
[7, 6, 1, 8, 0, 5, 4, 9, 2, 3]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
end Update
server_global_time: 32.31368464231491
only_train_time: 483.5104845389724

-------------Global Round number: 27-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.0975
Averaged Test Accuracy (Prototype Model): 0.0975
Averaged Train Loss (Regular Model): nan
Averaged Train Loss (Regular + Proto): nan
Std Test Accuracy (Regular Model): 0.1431
Std Test Accuracy (Prototype Model): 0.1431
tobetrained:
[7, 6, 1, 8, 0, 5, 4, 9, 2, 3]
Edge 7 begin training
Edge 6 begin training
Edge 1 begin training
Edge 8 begin training
Edge 0 begin training
Edge 5 begin training
Edge 4 begin training
Edge 9 begin training
Edge 2 begin training
Edge 3 begin training
readyList:
[7, 1, 8, 6, 0, 2, 5, 9, 4, 3]
aggregation_buffer:
[7, 1, 8, 6, 0, 2, 5, 9, 4, 3]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
end Update
server_global_time: 33.45130147784948
only_train_time: 501.2985772714019

-------------Global Round number: 28-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.0975
Averaged Test Accuracy (Prototype Model): 0.0975
Averaged Train Loss (Regular Model): nan
Averaged Train Loss (Regular + Proto): nan
Std Test Accuracy (Regular Model): 0.1431
Std Test Accuracy (Prototype Model): 0.1431
tobetrained:
[7, 1, 8, 6, 0, 2, 5, 9, 4, 3]
Edge 7 begin training
Edge 1 begin training
Edge 8 begin training
Edge 6 begin training
Edge 0 begin training
Edge 2 begin training
Edge 5 begin training
Edge 9 begin training
Edge 4 begin training
Edge 3 begin training
readyList:
[7, 2, 5, 0, 1, 6, 8, 9, 4, 3]
aggregation_buffer:
[7, 2, 5, 0, 1, 6, 8, 9, 4, 3]
class-wise minimum distance tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0')
min_gap tensor(nan, device='cuda:0')
max_gap tensor(nan, device='cuda:0')
Server loss: nan
end Update
server_global_time: 34.646108850836754
only_train_time: 519.4117407873273

-------------Global Round number: 29-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.0975
Averaged Test Accuracy (Prototype Model): 0.0975
Averaged Train Loss (Regular Model): nan
Averaged Train Loss (Regular + Proto): nan
Std Test Accuracy (Regular Model): 0.1431
Std Test Accuracy (Prototype Model): 0.1431
tobetrained:
[7, 2, 5, 0, 1, 6, 8, 9, 4, 3]
Edge 7 begin training
Edge 2 begin training
Edge 5 begin training
Edge 0 begin training
Edge 1 begin training
