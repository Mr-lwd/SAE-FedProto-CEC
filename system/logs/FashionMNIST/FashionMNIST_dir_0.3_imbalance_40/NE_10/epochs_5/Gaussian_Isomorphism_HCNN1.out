==================================================
goal = test
device = cuda
device_id = 0
dataset = FashionMNIST_dir_0.3_imbalance_40
jetson = 0
DVFS = 0
drawGMM = 1
num_classes = 10
model_family = HCNN1
batch_size = 256
num_workers = 0
local_learning_rate = 0.06
use_decay_scheduler = False
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 200
edge_epochs = 1
local_epochs = 5
algorithm = FedSAE
join_ratio = 1.0
edge_join_ratio = 1.0
random_join_ratio = False
num_clients = 40
num_edges = 10
prev = 0
times = 1
eval_gap = 1
save_folder_name = temp
auto_break = False
feature_dim = 512
vocab_size = 98635
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
optimizer = SGD
lamda = 1.0
weight_decay = 0
trans_delay_simulate = False
momentum = 0.8
agg_type = 0
buffersize = 10
gl_use_clients = 1
test_useglclassifier = 1
gamma = 1.0
drawtsne = 1
drawround = 20
noise_dim = 512
generator_learning_rate = 0.0001
hidden_dim = 512
server_epochs = 100
alpha = 1.0
beta = 1.0
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
server_learning_rate = 0.01
margin_threthold = 100.0
generator_path = stylegan/stylegan-xl-models/imagenet64.pkl
stable_diffusion_prompt = a cat
server_batch_size = 100
gen_batch_size = 4
mu = 50.0
buffer_size = 10
==================================================
Random seed set as 42

============= Running time: 0th =============
Creating server and clients ...
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
temp/FashionMNIST_dir_0.3_imbalance_40/NE_10/featuredim_512/FedSAE/SGD/lr_0.06/wd_0/momentum_0.8/lbs_256/lamda_1.0/localepoch_5/buffer_10/gamma_1.0_usegltest_1/1736388481.8673534
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 0
label_counts: defaultdict(<class 'int'>, {9: 545, 2: 98, 1: 338, 0: 287, 3: 26, 5: 106, 6: 3, 4: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 1
label_counts: defaultdict(<class 'int'>, {2: 18, 4: 630, 1: 507, 0: 18, 7: 199, 5: 47, 6: 2, 3: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 2
label_counts: defaultdict(<class 'int'>, {7: 312, 5: 157, 6: 67, 4: 11, 9: 99, 0: 190, 3: 30, 8: 6, 2: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 3
label_counts: defaultdict(<class 'int'>, {8: 190, 3: 171, 2: 395, 0: 3, 4: 51, 6: 100, 9: 19, 5: 4})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 4
label_counts: defaultdict(<class 'int'>, {0: 327, 5: 553, 1: 428, 2: 202, 4: 5})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 5
label_counts: defaultdict(<class 'int'>, {6: 633, 4: 421, 3: 41, 2: 58, 1: 100, 5: 13, 8: 45, 7: 11, 0: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 6
label_counts: defaultdict(<class 'int'>, {9: 425, 8: 384, 4: 260, 6: 31, 1: 12, 2: 6, 3: 24, 7: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 7
label_counts: defaultdict(<class 'int'>, {9: 477, 8: 645, 0: 36, 4: 53, 7: 16, 6: 335, 3: 38, 1: 11, 5: 13, 2: 7})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 8
label_counts: defaultdict(<class 'int'>, {4: 502, 0: 124, 9: 102, 6: 63, 2: 81, 8: 26, 5: 17, 3: 9, 1: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 9
label_counts: defaultdict(<class 'int'>, {3: 943, 1: 139, 2: 177, 0: 75})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 10
label_counts: defaultdict(<class 'int'>, {4: 883, 8: 445, 0: 32, 5: 19, 2: 57, 3: 12, 1: 1, 6: 1, 7: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 11
label_counts: defaultdict(<class 'int'>, {6: 147, 1: 58, 8: 220, 4: 230, 5: 54, 3: 44, 7: 8, 9: 88, 2: 13})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 12
label_counts: defaultdict(<class 'int'>, {6: 248, 0: 206, 1: 263, 5: 101, 3: 165, 9: 14, 7: 1, 4: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 13
label_counts: defaultdict(<class 'int'>, {2: 795, 3: 402, 7: 197, 0: 11, 4: 7, 1: 7, 5: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 14
label_counts: defaultdict(<class 'int'>, {9: 218, 0: 312, 5: 65, 3: 131, 4: 21, 2: 44, 1: 57, 8: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 15
label_counts: defaultdict(<class 'int'>, {6: 980, 5: 215, 1: 39, 0: 83, 3: 12, 4: 2})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 16
label_counts: defaultdict(<class 'int'>, {0: 140, 1: 860, 3: 83, 6: 18, 5: 68, 8: 280, 4: 58, 7: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 17
label_counts: defaultdict(<class 'int'>, {3: 30, 5: 490, 8: 642, 4: 28, 2: 16, 6: 21, 0: 104, 7: 1, 1: 2})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 18
label_counts: defaultdict(<class 'int'>, {7: 229, 8: 391, 1: 105, 5: 27, 4: 108, 3: 33, 0: 1, 6: 2, 2: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 19
label_counts: defaultdict(<class 'int'>, {1: 364, 0: 1204})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 20
label_counts: defaultdict(<class 'int'>, {5: 157, 9: 858, 4: 216, 0: 37, 7: 131, 1: 290, 6: 44, 8: 1, 2: 19, 3: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 21
label_counts: defaultdict(<class 'int'>, {3: 62, 6: 225, 4: 288, 1: 383, 0: 136, 7: 16, 9: 1, 8: 4, 5: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 22
label_counts: defaultdict(<class 'int'>, {7: 387, 1: 102, 5: 243, 6: 68, 0: 12, 8: 15, 2: 9, 3: 1, 4: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 23
label_counts: defaultdict(<class 'int'>, {1: 32, 9: 256, 0: 232, 5: 40, 8: 141, 3: 2, 6: 1, 7: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 24
label_counts: defaultdict(<class 'int'>, {3: 447, 9: 235, 4: 309, 5: 120, 0: 62, 1: 2, 8: 15})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 25
label_counts: defaultdict(<class 'int'>, {5: 505, 2: 154, 3: 388, 7: 222, 1: 34, 0: 81, 4: 7})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 26
label_counts: defaultdict(<class 'int'>, {2: 116, 7: 172, 4: 139, 8: 568, 0: 443, 3: 26, 1: 10, 5: 5})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 27
label_counts: defaultdict(<class 'int'>, {2: 186, 5: 530, 6: 253, 3: 75, 0: 88, 4: 5, 7: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 28
label_counts: defaultdict(<class 'int'>, {8: 93, 9: 281, 7: 176, 1: 63, 2: 50, 0: 22, 5: 14, 3: 24, 6: 2, 4: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 29
label_counts: defaultdict(<class 'int'>, {3: 170, 5: 337, 9: 164, 7: 363, 4: 2, 1: 20, 8: 138, 2: 27, 6: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 30
label_counts: defaultdict(<class 'int'>, {0: 243, 8: 229, 7: 302, 9: 43, 5: 24, 3: 2, 2: 1, 1: 2})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 31
label_counts: defaultdict(<class 'int'>, {4: 583, 1: 223, 2: 510, 0: 98})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 32
label_counts: defaultdict(<class 'int'>, {6: 75, 9: 1142, 2: 276, 5: 146, 7: 49, 8: 12, 0: 31, 3: 51, 1: 20, 4: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 33
label_counts: defaultdict(<class 'int'>, {3: 276, 2: 405, 6: 254, 1: 76, 0: 151, 4: 83, 7: 122})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 34
label_counts: defaultdict(<class 'int'>, {6: 870, 2: 880, 0: 172, 3: 12, 1: 42, 4: 9})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 35
label_counts: defaultdict(<class 'int'>, {0: 300, 2: 90, 4: 312, 7: 36, 3: 121, 1: 25, 5: 70, 9: 70, 6: 18, 8: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 36
label_counts: defaultdict(<class 'int'>, {7: 124, 8: 221, 3: 364, 6: 412, 1: 41, 9: 158, 2: 127, 4: 5, 0: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 37
label_counts: defaultdict(<class 'int'>, {3: 1002, 7: 2178, 6: 142, 2: 20, 5: 11, 0: 1, 4: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 38
label_counts: defaultdict(<class 'int'>, {0: 14, 5: 1124, 1: 545, 3: 21, 2: 23, 4: 1})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 39
label_counts: defaultdict(<class 'int'>, {6: 233, 8: 501, 2: 387, 5: 12, 1: 41, 0: 13, 9: 3, 3: 2, 4: 1, 7: 2})

Join ratio / total clients: 1.0 / 40
Finished creating server and clients.
tobetrained:
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
Edge 9 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_10 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_34 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_14 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_27 protos Not Found
Edge 8 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_3 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_31 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_22 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_21 protos Not Found
Edge 7 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_23 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_35 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_6 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_30 protos Not Found
Edge 6 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_4 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_39 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_9 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_8 protos Not Found
Edge 5 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_11 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_32 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_29 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_0 protos Not Found
Edge 4 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_36 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_7 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_1 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_28 protos Not Found
Edge 3 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_37 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_13 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_20 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_18 protos Not Found
Edge 2 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_5 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_25 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_2 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_38 protos Not Found
Edge 1 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_12 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_17 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_33 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_24 protos Not Found
Edge 0 begin training
Server global_protos Not Found
Server glclassifier Not Found
Client_26 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_15 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_19 protos Not Found
Server global_protos Not Found
Server glclassifier Not Found
Client_16 protos Not Found
readyList:
[7, 6, 8, 4, 0, 1, 5, 2, 3, 9]
aggregation_buffer:
[7, 6, 8, 4, 0, 1, 5, 2, 3, 9]
train global classifier
train glclassifier time: 3.6421182211488485
global classifier accuracy in train virtual: 86.6225
Number of samples: 324
end Update
server_global_time: 0.7386107845231891
only_train_time: 11.004335578531027

-------------Global Round number: 0-------------

Evaluate heterogeneous models
Averaged Test Accuracy (Regular Model): 0.8086
Averaged Test Accuracy (Prototype Model): 0.7523
Averaged Train Loss (Regular Model): 0.6932
Averaged Train Loss (Regular + Proto): 0.6932
Std Test Accuracy (Regular Model): 0.1167
Std Test Accuracy (Prototype Model): 0.1475
tobetrained:
[7, 6, 8, 4, 0, 1, 5, 2, 3, 9]
Edge 7 begin training
Edge 6 begin training
Edge 8 begin training
Edge 4 begin training
Edge 0 begin training
Edge 1 begin training
Edge 5 begin training
Edge 2 begin training
Edge 3 begin training
Edge 9 begin training
readyList:
[7, 1, 8, 0, 6, 5, 4, 2, 9, 3]
aggregation_buffer:
[7, 1, 8, 0, 6, 5, 4, 2, 9, 3]
