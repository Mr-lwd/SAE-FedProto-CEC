==================================================
goal = test
device = cuda
device_id = 0
dataset = FashionMNIST_dir_0.1_imbalance_40
num_classes = 10
model_family = HCNNs8
batch_size = 256
num_workers = 0
local_learning_rate = 0.06
use_decay_scheduler = False
learning_rate_decay = False
learning_rate_decay_gamma = 0.99
global_rounds = 200
edge_epochs = 1
local_epochs = 5
algorithm = FedTGP
join_ratio = 1.0
random_join_ratio = False
num_clients = 40
num_edges = 10
prev = 0
times = 1
eval_gap = 1
save_folder_name = temp
auto_break = False
feature_dim = 512
vocab_size = 98635
max_len = 200
client_drop_rate = 0.0
train_slow_rate = 0.0
send_slow_rate = 0.0
time_select = False
time_threthold = 10000
optimizer = SGD
lamda = 1.0
weight_decay = 0
trans_delay_simulate = False
momentum = 0.8
agg_type = 0
buffersize = 10
gl_use_clients = 1
test_useglclassifier = 1
gamma = 1
drawtsne = 1
drawround = 20
noise_dim = 512
generator_learning_rate = 0.0001
hidden_dim = 512
server_epochs = 100
alpha = 1.0
beta = 1.0
mentee_learning_rate = 0.005
T_start = 0.95
T_end = 0.98
server_learning_rate = 0.01
margin_threthold = 100.0
generator_path = stylegan/stylegan-xl-models/imagenet64.pkl
stable_diffusion_prompt = a cat
server_batch_size = 100
gen_batch_size = 4
mu = 50.0
==================================================
Random seed set as 42

============= Running time: 0th =============
Creating server and clients ...
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes)
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 0
label_counts: defaultdict(<class 'int'>, {7: 1486, 2: 18, 6: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 1
label_counts: defaultdict(<class 'int'>, {6: 128, 2: 23, 4: 74, 1: 141, 5: 907, 0: 64})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 2
label_counts: defaultdict(<class 'int'>, {3: 903, 0: 187, 2: 364})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 3
label_counts: defaultdict(<class 'int'>, {5: 157, 6: 498, 7: 4})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 4
label_counts: defaultdict(<class 'int'>, {6: 712, 3: 83, 1: 39, 7: 11, 4: 2, 5: 2})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 5
label_counts: defaultdict(<class 'int'>, {5: 1671, 0: 176, 2: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 6
label_counts: defaultdict(<class 'int'>, {0: 185, 4: 494, 6: 351, 5: 40, 3: 10})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 7
label_counts: defaultdict(<class 'int'>, {8: 1071, 7: 88, 1: 11, 2: 5, 6: 1, 9: 1, 0: 1})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 8
label_counts: defaultdict(<class 'int'>, {4: 595, 3: 633, 9: 21, 1: 2})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 9
label_counts: defaultdict(<class 'int'>, {3: 592, 0: 983, 2: 17, 1: 1})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 10
label_counts: defaultdict(<class 'int'>, {8: 386, 3: 6, 2: 2, 6: 8})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 11
label_counts: defaultdict(<class 'int'>, {9: 280, 4: 95, 6: 1, 2: 13, 7: 3, 0: 1})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 12
label_counts: defaultdict(<class 'int'>, {1: 1691, 0: 569})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 13
label_counts: defaultdict(<class 'int'>, {2: 776, 1: 161, 6: 174, 7: 15, 8: 31, 3: 156, 5: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 14
label_counts: defaultdict(<class 'int'>, {3: 247, 8: 61, 5: 46})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 15
label_counts: defaultdict(<class 'int'>, {5: 445, 2: 802, 9: 96, 1: 52, 3: 11, 0: 1})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 16
label_counts: defaultdict(<class 'int'>, {2: 619, 0: 5, 3: 21, 9: 1})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 17
label_counts: defaultdict(<class 'int'>, {0: 404, 2: 27, 6: 5, 5: 3, 7: 4, 3: 1})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 18
label_counts: defaultdict(<class 'int'>, {9: 357, 7: 31, 4: 5, 8: 3})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 19
label_counts: defaultdict(<class 'int'>, {9: 716, 7: 20, 8: 2})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 20
label_counts: defaultdict(<class 'int'>, {9: 672, 5: 198, 0: 3, 1: 2, 6: 1})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 21
label_counts: defaultdict(<class 'int'>, {6: 3263, 1: 578, 3: 141, 5: 73, 2: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 22
label_counts: defaultdict(<class 'int'>, {9: 2370, 2: 63, 1: 46, 7: 2})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 23
label_counts: defaultdict(<class 'int'>, {9: 360, 4: 40, 0: 5, 1: 19, 8: 4})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 24
label_counts: defaultdict(<class 'int'>, {3: 992, 6: 49, 9: 28, 2: 4})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 25
label_counts: defaultdict(<class 'int'>, {7: 602, 8: 1902, 2: 180})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 26
label_counts: defaultdict(<class 'int'>, {7: 1823, 3: 55, 0: 710, 4: 101, 1: 214, 5: 7})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 27
label_counts: defaultdict(<class 'int'>, {0: 253, 2: 295, 6: 15, 3: 28, 1: 9})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 28
label_counts: defaultdict(<class 'int'>, {9: 250, 0: 249, 4: 500, 6: 5, 8: 5, 3: 1, 5: 2})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 29
label_counts: defaultdict(<class 'int'>, {5: 914, 6: 5, 1: 20, 9: 3})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 30
label_counts: defaultdict(<class 'int'>, {3: 253, 7: 708, 2: 384})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 31
label_counts: defaultdict(<class 'int'>, {0: 279, 9: 92, 7: 269, 8: 14, 1: 19, 5: 2})
CNN(num_cov=1, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 32
label_counts: defaultdict(<class 'int'>, {5: 748, 2: 239, 3: 354, 4: 12})
CNN(num_cov=2, hidden_dims=[], in_features=1, num_classes=args.num_classes) model chosen!
id 33
label_counts: defaultdict(<class 'int'>, {1: 985, 0: 320, 3: 122})
CNN(num_cov=1, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 34
label_counts: defaultdict(<class 'int'>, {2: 1409, 1: 79})
CNN(num_cov=2, hidden_dims=[512], in_features=1, num_classes=args.num_classes) model chosen!
id 35
label_counts: defaultdict(<class 'int'>, {4: 2966, 0: 161, 1: 2})
CNN(num_cov=1, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 36
label_counts: defaultdict(<class 'int'>, {1: 1198, 7: 171, 3: 3, 5: 10})
CNN(num_cov=2, hidden_dims=[1024], in_features=1, num_classes=args.num_classes) model chosen!
id 37
label_counts: defaultdict(<class 'int'>, {3: 642, 0: 148, 4: 103, 5: 51, 9: 11, 1: 1})
CNN(num_cov=1, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 38
label_counts: defaultdict(<class 'int'>, {0: 494, 5: 8, 8: 9, 7: 1})
CNN(num_cov=2, hidden_dims=[1024, 512], in_features=1, num_classes=args.num_classes) model chosen!
id 39
label_counts: defaultdict(<class 'int'>, {8: 1743, 4: 256, 7: 32, 6: 15, 0: 1, 2: 1, 1: 1, 3: 1, 9: 1, 5: 1})

Join ratio / total clients: 1.0 / 40
Finished creating server and clients.
Trainable_prototypes(
  (embedings): Embedding(10, 512)
  (middle): Sequential(
    (0): Sequential(
      (0): Linear(in_features=512, out_features=512, bias=True)
      (1): ReLU()
    )
  )
  (fc): Linear(in_features=512, out_features=512, bias=True)
)
tobetrained:
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
Edge 9 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 8 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 7 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 6 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 5 begin training
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Server global_protos Not Found
Edge 4 begin training
